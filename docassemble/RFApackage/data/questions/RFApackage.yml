#People can use https://apps-dev.suffolklitlab.org/start/RFA_Demo/ to test my demo -- and I can keep working on this RFApackage. Then I can "update" the RFA "Package". That will update the RFADemo interview. (Go to Package Management in the login dropdown menu.)

####################### TO DO #######################
#####FOR LEMMA TO WORK ON #####
#Please do not edit the PDF templates. I have worked on them for accessibility. I can edit them if needed :)
#Work on getting all answers to show correctly on PDFs.
#Clean up the Review answers screen. It's missing some fields/variables. If you add the missing ones, Kris could reorganize them in the general order of the interview.
#Customize address questions so people type in Apt. or Unit before their #. I want to print address on one line sometimes and all I see now is C instead of Apt. C. (On Conf. Notification PDF, to full physical address on Complaint at top and at #5 on first page, to top of Affidavit)
#For id: Relationship to defendant, require only one answer
#For id: What you want to ask for in the RFA order, require at least one checkmark
#For id: What you want to ask for in the RFA order, make subquestions required
#For id: Existing orders or court proceedings, only show the bottom questions if the user has checked one of the checkboxes
#How change line spacing for multi-line narrative answers in affidavit PDF?
#On Affidavit, I tried to format time better like format_time("04:01:23", format='h:mm a')  but it gives an error message on the PDF
#For extra sheet of weapons, how do I do   if extra_sheet_weapons:   then set  extra_sheets_attached = 1
# Also need to add weapons_overflow  as an overflow attachment
#In interview, why does this page show? id: preview RFApackage  before the page where they can view forms and hit edit button? Do I need that?
#In interview, trial_court_address.address and .county was triggering the baked-in What court do you want to file in screen. I ask a simple county question instead. But for efiling we should probably set up VT Courts list properly, right?
#I'd like to offer a "Edit your answers" link in the upper-right dropdown menu (the account dropdown menu options). It should go to the review screen.
#I currently have NOT customized our Next Steps document. It's a static file. The one thing we could do is to add the address, phone and email for the county family court that they selected.

#####END LEMMA ##########

#####KRIS TO WORK ON########
#Ask Laura: What if user doesn't know Def birthdate or address?
#Why is background black when I look at this in Chrome on Android phone?
#Update variable names in Edit and Publish sections for all the ones that I did checkboxes for, including:  skin color   hair length   hair_color  eye color - choose one
#Other places the defendant might be, Use state abbreviations and default to VT
#Re-do complaint PDF so it's a smaller size document? Should check marks look larger on PDF?
#In footer, add vtcourt forms are offered by LSV?

#####################################################################
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
features:
  css: style.css
---
metadata:
  title: |
    Asking for a Relief from Abuse order (RFA) in Vermont
  short title: |
    Relief from Abuse (RFA)
  tags:
    - FA-07-00-00-00
  authors:
    - VTCourtForms by Legal Services Vermont
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["RFApackage"]
data:
  al_weaver_version: "1.9.0"
  generated on: "2023-03-22"
  title: >-
    Relief from Abuse order
  short title: >-
    RFA package
  description: |-
    Ask the court for a Relief from Abuse (RFA) order. This one interview will help you complete four required forms.
  original_form: >-
    https://vtlawhelp.org/roadmap/relief-from-abuse/step-3
  allowed courts: 
    - "Family Court"
  categories:
    - "FA-07-00-00-00"
  typical role: "plaintiff"
  generate download screen: True
  
---
code: |
  AL_ORGANIZATION_TITLE = "VTCourtForms"
---
code: |
  AL_ORGANIZATION_HOMEPAGE = "https://vtlawhelp.org/"
---
objects:
  - al_logo: DAStaticFile.using(filename="LSV_bug.png")
---
images:
  big_logo: LSV_logo.png 
---
code: |
  interview_metadata['main_interview_key'] =  'RFApackage'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "VT"
---
code: |
  github_repo_name =  'docassemble-RFApackage'
---
code: |
  interview_short_title = "Ask the court for a Relief from Abuse (RFA) order"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1)
  - children: ALPeopleList.using(ask_number=True,complete_attribute="complete")
---

#####################################################################
#################### INTERVIEW ORDER #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_RFApackage
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["RFApackage"]["allowed courts"]
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  nav.set_section("screening")
  ##initial_screening_questions##
  extend_or_change
  if extend_or_change:
    initial_screening_questions_1_exit
    
  relationship_question
  if relationship_question == 'Family member':
    under_16
    if under_16:
      initial_screening_questions_2_exit

  if relationship_question == 'Current or former sexual partner':
    under_16
    if under_16:
      initial_screening_questions_2_exit
      
  if relationship_question == 'Someone who lives with you or used to live with you':
    under_16
    if under_16:
      initial_screening_questions_2_exit

  if relationship_question == 'None of the above':
    initial_screening_questions_2_exit_a
    
  who_needs_protection  
  if who_needs_protection == 'I’m asking for an RFA order only for a child or children':
    initial_screening_questions_3_exit
      
  plaintiff_lives_in_vermont
  if plaintiff_lives_in_vermont:
    defendant_lives_in_vermont
    if defendant_lives_in_vermont:
      initial_screening_questions_5_continue
    if not defendant_lives_in_vermont:
      initial_screening_questions_5_exit_b
      
  if not plaintiff_lives_in_vermont:
    defendant_lives_in_vermont
    if defendant_lives_in_vermont:
      initial_screening_questions_5_continue
    if not defendant_lives_in_vermont:
      initial_screening_questions_5_exit_a
  
  #main questions
  race
  hair
  recent_incident_date
  trial_court_name
  set_progress(8)
  nav.set_section("about")
  users.gather()
  set_parts(subtitle=str(users))
  users[0].name.first
  users[0].birthdate
  users1_address_mailing
  users[0].phone_number
  users[0].email
  set_progress(16)
  share_contact
  children.gather()
  set_progress(24)
  #set_parts(subtitle=str(other_parties))
  nav.set_section('defendant')
  ex_spouse
  other_parties.gather()
  set_progress(32)
  other_parties[0].birthdate
  other_parties[0].address.address
  other_parties[0].phone_number
  incarcerated
  nav.set_section('incidents')
  recent_incident_date
  set_progress(40)
  if not recent_incident_most_serious:
    serious_incident_date
  other_incident
  set_progress(50)
  danger_more_abuse
  nav.set_section('weapons')
  weapons.gather()
  used_firearm
  nav.set_section('order')
  set_progress(60)
  users1_no_shelter  
  request_not_abuse
  if request_temp_PRR:
    get_kids_relationships
  if other_request:
    request_other_description
  request_all_emergency
  set_progress(70)
  existing_order
  nav.set_section('service')
  details_for_law_enforcement
  location_of_home
  vehicle_make
  relationship_for_LE
  employer
  house2
  set_progress(80)
  #race
  #hair
  set_progress(90)
  notify_served
  nav.set_section("review_RFApackage")
  RFApackage_preview_question
  nav.set_section('signature')
  printed_signature
  users[0].signature
  nav.set_section('get_docs')
  interview_order_RFApackage = True
  
---
sections:
  - intro: Introduction
  - screening: Is this interview right for you
  - about: About you
  - defendant: About the defendant
  - incidents: What happened
  - weapons: Weapons
  - order: What you want in the RFA order
  - service: Info for law enforcement to serve the order
  - signature: Signature
  - review_RFApackage: Edit your answers
  - get_docs: Get your documents
#progressive: False
##################
---
code: |
  children[i].name.first
  children[i].birthdate
  children[i].complete=True

---

#####################################################################
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  nav.set_section("intro")
  al_intro_screen
  RFApackage_intro
  RFApackage_intro_2
  interview_order_RFApackage
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  RFApackage_download
---
id: basic questions intro screen
decoration: form-lineal
question: |
  **${interview_short_title} in Vermont**

subquestion: |  

  <div class="border-around-text">
  <p>Welcome to ${ AL_ORGANIZATION_TITLE}.</p>
  
  <p>${ AL_ORGANIZATION_TITLE } can help you complete and download forms in 3 steps:</p>
  <ul><li><b>Step 1:</b> Answer questions that will fill in court forms for you.</li>
  <li><b>Step 2:</b> Preview the completed forms.</li>
  <li><b>Step 3:</b> Download, save or print the final forms. You will need to mail, email, efile or deliver them to the court on your own.</li></ul>
  </div>  
  
  <i class="fas fa-file-text fa-2x"></i> This guided interview will produce a complete package of 4 forms needed to ask the court for a Relief from Abuse (RFA) order in Vermont: the Complaint, Affidavit, Confidential Notification form and Protection Order Service Information form. Learn more about RFA orders and this interview on the next screen.
  
  <i class="fas fa-clock fa-2x"></i> It may take you over 1 hour to complete this interview. Consider creating a free account so you can save your progress. At any time choose "sign up" in the menu above, or "register" below.
  
  <i class="fas fa-share-nodes fa-2x"></i> Use the Share feature at the bottom of the page to share your progress with a trusted friend or advocate.
  
  <i class="fas fa-sign-out-alt fa-2x"></i> After saving or printing your work, log out and close your web browser.
  
  VTCourtForms interviews were created by Legal Services Vermont with support from the Legal Services Corporation. It is free to use this program. This site is not a lawyer. Visit our [VTLawHelp.org website](https://vtlawhelp.org) if you have legal questions.
  
  [FILE big_logo, 30%, Legal Services Vermont logo]

#  Tap the {green words} in any screen for a definition or more information.
  
#  % if chat_partners_available().help:
#  Live help is currently available in this interview. Click the speech bubble
#  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
#  % endif
fields:
  - To continue, please accept our [terms of use](https://vtlawhelp.org/vlh-privacy).: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
#terms:
#  green words: |
#    Green words are legal terms or a short way of referring to something that needs more explanation. #The definition or explanation pops up when you tap the green words.
#right: |
#  % if user_has_saved_answers:
#  ${fa_icon("bell", color="primary", size="sm")}
#  Saved answers available!  
  
#  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), #size="sm" )}
#  % endif    
  
---
id: RFApackage_intro
continue button field: RFApackage_intro
question: |
  What to know before you start
subquestion: |
  Some important things to know about asking the court for a Relief from Abuse order (RFA) in Vermont:
  
  * There is no charge for an RFA order. It is free. 
  * **Even when the courts are closed, it’s after hours, or it’s a weekend or holiday, you can start a Relief from Abuse case.** You may be able to get a temporary order right away to help keep you safe. At these times, you can email these forms or simply call and ask for help. Call the Vermont courts’ answering service at 1-800-540-9990. Say that you need help applying for a Relief from Abuse order over the phone. If you call, you need to leave a message with a number where they can call you back within an hour.
  * Applying for an RFA order can be a very dangerous time. Work with an advocate from the [Vermont Network](https://www.vtnetwork.org/get-help/) to create a safety plan — whether you end up asking for an RFA or not.
  * For details on the whole RFA process, visit the [RFA Roadmap on the VTLawHelp.org website.](https://vtlawhelp.org/roadmap/relief-from-abuse/step-1)
---
id: RFApackage_intro_2
continue button field: RFApackage_intro_2
question: |
  About using this guided interview
subquestion: |  
  * Make sure you are in a safe place. It takes time to work through this interview. It may take 1 hour or more.
  * If you are in danger right now, dial 911.
  * Use this interview if you are asking for an RFA order for you, **or** both you and your children. (There are different forms for [asking for an RFA only on behalf of a child or children.](https://vtlawhelp.org/roadmap/relief-from-abuse/step-3))
  * The forms in this interview can only be used in Vermont.
  * Consider creating an account and saving your work along the way. You could log in later to review your answers with an advocate. Choose “sign up” in the menu above, or “register” below.
  * Click "Share" at the bottom of this page to share a link to your progress with someone you trust. Important: The person you share this link with will be able to see and edit your answers.
  <h3 class="h4">Information you will need</h3>
  * To complete this interview, you will need to know the date or dates when the abuse occurred and give a detailed description of the abuse. This includes the most recent incident and the most serious incident. You will need to fully describe the incidents and make it clear how severe or how frequent the abuse has been.
  * You will need to give a safe address and telephone number where the court can reach you. If you don’t have one, ask an advocate from the [Vermont Network.](https://www.vtnetwork.org/get-help/)
  * You will see important questions about weapons that the defendant might have access to. If you list what they are and where they are located, the court can order law enforcement to collect them to help keep you safe.
  <h3 class="h4">After answering the questions</h3>
  * At the end you will get a chance to preview your forms and make changes if you need to. 
  * Then you can download, print and/or save a PDF of your completed forms.
  * You will also get an instruction sheet about how to get the completed forms to the court – this includes emailing them or dropping them off at your local family court.
  
  Next, let’s make sure this is the right interview for your situation.
  
  
  
  
---
id: initial_screening_questions_1
question: |
  See if this interview is right for your situation

fields:
  - "Do you want to extend or change an existing RFA order?": extend_or_change
    datatype: yesnoradio
---
id: initial_screening_questions_1_exit
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** In this situation, these are **not** the right forms to fill out. **Do not use this interview.** 
  
  [Find the right forms to extend or change an existing RFA order on this page of the VTLawHelp.org website.](https://vtlawhelp.org/roadmap/relief-from-abuse/step-6) You can also find out who to contact for help.
continue button field: initial_screening_questions_1_exit
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: initial_screening_questions_2
question: |
  See if this interview is right for your situation
fields:
  - "What is your relationship to the person who has abused you or is abusing you?": relationship_question
    input type: radio
    choices:
      - Family member
      - Current or former sexual partner
      - Someone you date or used to date
      - Someone who lives with you or used to live with you
      - None of the above
---
id: initial_screening_questions_2_a
question: |
  See if this interview is right for your situation
fields:
  - "Are you under age 16?": under_16
    datatype: yesnoradio
---    
id: initial_screening_questions_2_exit
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** In this situation, if you are under age 16, these are **not** the right forms to fill out. **Do not use this interview.**
  
  [Learn about your options on this page of the VTLawHelp.org website.](https://vtlawhelp.org/protection-minors) You can also find out who to contact for help.
continue button field: initial_screening_questions_2_exit
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---    
id: initial_screening_questions_2_exit_a
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** In this situation, these are **not** the right forms to fill out. **Do not use this interview.**
  
  [On this page of the VTLawHelp.org website](https://vtlawhelp.org/stalking-and-sexual-assault), learn about other options that include getting an Order Against Sexual Assault or an Order Against Stalking. You can also find out who to contact for help.
continue button field: initial_screening_questions_2_exit_a
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: initial_screening_questions_3
question: |
  See if this interview is right for your situation
fields:
  - "Who needs protection from abuse?": who_needs_protection
    input type: radio
    choices:
      - I need this order to protect me
      - I need this order to protect me and my child or children
      - I’m asking for an RFA order only for a child or children
---
id: initial_screening_questions_3_exit
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** In this situation, these are **not** the right forms to fill out. **Do not use this interview.**
  
  [On this page of the VTLawHelp.org website](https://vtlawhelp.org/roadmap/relief-from-abuse/step-3), learn about the other forms to use when asking for an RFA order **only** on behalf of a child or children. You can also find out who to contact for help.
continue button field: initial_screening_questions_3_exit
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: initial_screening_questions_4
question: |
  See if this interview is right for your situation
fields:
  - "Do you live in Vermont?": plaintiff_lives_in_vermont
    datatype: yesnoradio
---
id: initial_screening_questions_5
question: |
  See if this interview is right for your situation
fields:
  - "Does the defendant live in Vermont?": defendant_lives_in_vermont
    datatype: yesnoradio
  - note: The "defendant" is the person who is abusing you.
---
id: initial_screening_questions_5_continue
question: |
  Continue
subquestion: |
  <i class="fas fa-check fa-3x" style="color: #429a3c;" aria-hidden="true"></i>  Yes, you can use this interview to fill out these forms. Let's get started.
continue button field: initial_screening_questions_5_continue
buttons:
  - Start the interview: continue
---
id: initial_screening_questions_5_exit_a
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** **Do not use this interview.**
  
  In this situation, these may **not** be the right forms to fill out. Consult with a lawyer or legal aid organization in your state or the defendant’s state.
continue button field: initial_screening_questions_5_exit_a
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: initial_screening_questions_5_exit_b
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i>  **Stop.** It’s time to stop and ask for advice! If the defendant is not currently a Vermont resident, then there may be a question as to whether Vermont has jurisdiction over the defendant. 
  
  Vermont needs to have jurisdiction over the defendant to make the Relief from Abuse order work. Consult with a lawyer, like the lawyers at [Legal Services Vermont and Vermont Legal Aid](https://vtlawhelp.org). 
  
  Find out whether you should use these forms or not. If you get the green light from a lawyer, come back and answer Yes to this question so you can start the guided interview.
continue button field: initial_screening_questions_5_exit_b
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: choose a court
question: |
  Choose a Family Court
fields:
  - note: |
      Choose the county where you will file your forms to ask for a RFA order. 
      
      It can be:
      
      * the county you live in, or 
      * the county the other person lives in (the defendant).
      
      Not sure what county? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - County: trial_court_name
    choices:
      - Addison
      - Bennington
      - Caledonia
      - Chittenden
      - Essex
      - Franklin
      - Grand Isle
      - Lamoille
      - Orange
      - Orleans
      - Rutland
      - Washington
      - Windham
      - Windsor
 #% if al_form_type == 'starts_case':
  #What court do you want to file in?
  #% elif al_form_type == 'appeal':
  #What is the name of the trial court your case was originally filed in?
  #% else:
  #What court is your case in?
  #% endif
  #subquestion: |
  #% if not al_form_type == 'starts_case':
  #Look at your court paperwork. Match the name listed there.
  #% endif
  ##${ collapse_template(how_to_pick_court_help_template) }

  
  #- Address: trial_court_address.address
  #  address autocomplete: True
  #  required: False
  #- Suite: trial_court_address.unit
  #  required: False
  #- City: trial_court_address.city
  #  required: False
  #- State: trial_court_address.state
  #  required: False
  #- Postal code: trial_court_address.zip    
  #  required: False
---
#I had to set this because the automated AL.court bundle wanted to define the court address and county, when I didn't need that at this time. AL.court bundle will be needed to efile. 
code: |
  trial_court_address.county = trial_court_name
---
id: About you
question: |
  About you
subquestion: |
  As the person filling out these forms, you are called the "plaintiff." We'll start with some questions about you.
---
id: Gather users address
sets:
  - users[i].address.address
  - users[i].address.city
  - users[i].address.zip
  - users[i].address.state
question: |
  What is your address?
subquestion: |
  Use an address where it is safe for the court to contact you. You can [talk with an advocate](https://vtnetwork.org/) about how to get a safer mailing address. 
fields:
  - code: |
      users[0].address_fields(default_state=AL_DEFAULT_STATE)
  - note: |
      If you have a P.O. Box, or your mailing address is different than your street address, enter it below. (Example: P.O. Box 11111, Burlington, VT 05401)
  - "Mailing address": users1_address_mailing
    maxlength: 42
    required: False
  - note: |
      <h2 class="h3">Reach Up Benefits</h2>
  - "Check this box if you get Reach Up benefits from the state": reach_up_users1
    datatype: yesno    
continue button field: About_you
---
id: Gather users contact information
question: |
  What is your contact information?
subquestion: |
  Include at least **one safe way** to reach you other than by mail. You can use a friend's phone number, if that is the safest way to reach you.

#  ${ collapse_template(why_contact_info_needed_template) }
fields:  
  - Phone number: users[0].phone_number
    required: False
  - Work phone number: users1_work_phone_number
    required: False
  - Email address: users[0].email    
    datatype: email
    required: False      
validation code: |
  if (not showifdef('users[0].phone_number') and \
      (not showifdef('users[0].email')) and \
      (not showifdef('users1_work_phone_number'))):
    validation_error(word("You need to provide at least one contact method."), field="users[0].other_contact_method")
---
id: Share contact info
question: |
  Sharing your contact information
subquestion: |
  To keep your contact information confidential, select **No**. Then only the court and law enforcement will see your address and contact information. 
  
  If you select Yes, other people can get your address and contact information.
fields:
  - "I consent to the release of my address and contact information.": share_contact
    datatype: yesnoradio
---
id: how many children
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  Are any children involved in this case? 
  % else:
  Are any children involved in this matter?
  % endif  
fields:
  - note: |
      Include children under 18 who have been affected by abuse. Also include children who you would like to ask for temporary custody of.
  - no label: children.there_are_any
    datatype: yesnoradio
  - How many?: children.target_number
    datatype: integer
    show if: children.there_are_any
validation code: |
  if not children.there_are_any:
    children.target_number = 0
---
id: Relationship to defendant
question: |
  Relationship to defendant
subquestion: |
  Choose the best description of your relationship to the person who is the abuser. That person is called the "defendant."
fields:
  - note: |
      Select one.
  - "Spouse": is_spouse
    datatype: yesno
  - "Ex-spouse (former spouse)": ex_spouse
    datatype: yesno
  - "Someone you have been living with or sharing occupancy": live_together
    datatype: yesno
  - "Someone with whom you have had a sexual relationship": sexual_relationship
    datatype: yesno
  - "Someone you have dated": dating
    datatype: yesno
  - "A member of your family": family_member
    datatype: yesno
  - "In a word or two, what is your relationship to this family member": family_member_description
    maxlength: 16
    show if: family_member
  - "A different relationship to you": other_relationship
    datatype: yesno
  - "In a word or two, what is that other relationship?": other_relationship_description
    maxlength: 16
    show if: other_relationship
validation code: |
  if [is_spouse, ex_spouse, live_together, sexual_relationship, dating, family_member].count(True) != 1:
    validation_error("Please select only one option.")
---
id: Gather defendant name
sets:
  - other_parties[i].name.first
  - other_parties[i].name.middle
  - other_parties[i].name.last
question: |
  Name of defendant
fields:
  - code: |
      other_parties[0].name_fields(person_or_business='person', show_suffix=False)
  - "Jr.": suffix_jr
    datatype: yesno
  - "Sr.": suffix_sr
    datatype: yesno
  - "I": suffix_first
    datatype: yesno
  - "II": suffix_second
    datatype: yesno
  - "III": suffix_third
    datatype: yesno
  - "List any other names the defendant uses (aliases)": other_parties1_aliases
    maxlength: 85
    required: False
---
id: About the defendant
question: |
  About the defendant
fields:
  - "Check this box if the defendant gets Reach Up benefits": reach_up_OP
    datatype: yesno
  - "Check this box if defendant is a current member of the military": other_parties1_military
    datatype: yesno
  - "Check this box if the defendant is incarcerated (in jail) and has been convicted of one of the crimes specified in 15 V.S.A. 1103 (c)(1)(B)? See the list of crimes*, below.": incarcerated
    datatype: yesno
  - note: |
      *****  Those crimes are: murder, attempted murder, kidnapping, domestic assault, aggravated domestic assault, sexual assault, aggravated sexual assault, stalking, aggravated stalking, lewd or lascivious conduct with a child, use of a child in a sexual performance, or consenting to a sexual performance.

---
id: Gather defendants address
sets:
  - other_parties[i].address.address
  - other_parties[i].address.city
  - other_parties[i].address.zip
  - other_parties[i].address.state
question: |
  What is the defendant's address?
fields:
  - code: |
      other_parties[0].address_fields(default_state=AL_DEFAULT_STATE)  
---
id: Gather defendants phone numbers
question: |
  What are the defendant's phone numbers?
fields:  
  - Home phone: other_parties[0].phone_number
    required: False
  - Cell phone: other_parties[0].mobile_number
    required: False
  - Work phone: other_parties1_work_phone_number
    required: False
  - Other phone: other_parties1_other_phone_number
    required: False    
---
id: What happened most recently
question: |
  What happened -- most recently
subquestion: |
  This is where you will describe the **most recent** incident of abuse. Be as detailed as possible. The judge needs to know exactly what happened. If you don't give enough details, you may not get a RFA order.
  
  See the [VTLawHelp.org legal help website](https://vtlawhelp.org/roadmap/relief-from-abuse/step-3#forms) for tips on what to include in your description. This information will be part of your "Affidavit".
fields:
  - "What was the date of the most recent incident?": recent_incident_date
    datatype: date
  - "What was the time of the most recent incident? You can estimate if you don't know for sure.": recent_incident_time
    datatype: time
  - "In what town was the most recent incident?": recent_incident_town
    maxlength: 26
  - "In what state was the most recent incident?": recent_incident_state
    code: states_list() 
    default: Vermont
  - "Please describe the most recent incident with as much detail as possible.": recent_incident_description
    input type: area
    rows: 20
  - You were the target of the recent abuse: recent_incident_users1
    datatype: yesnoradio
  - Your children were the target of the recent abuse: recent_incident_children
    datatype: yesnoradio
  - "What are the names of the children who were the target of the recent abuse? List their names with commas in between.": recent_incident_children_names
    maxlength: 63
    show if: recent_incident_children
  - note: |
      ---
    show if: recent_incident_children
  - note: |
      Check all that apply to this incident. Select at least one statement.
  - "The defendant caused or attempted to cause physical harm": recent_incident_harm
    datatype: yesno
  - "The defendant placed you and/or them in fear of imminent serious physical harm": recent_incident_fear
    datatype: yesno
  - "The defendant abused the child/children -- meaning they physically injured or otherwise treated the child(ren) in a manner which placed child(ren's) life, health, development or welfare in jeopardy.": recent_incident_abused
    datatype: yesno
  - "The defendant stalked you and/or the child/children. Stalking is defined in Vermont law here: [12 V.S.A 5131(6)](https://legislature.vermont.gov/statutes/section/12/178/05131)": recent_incident_stalked
    datatype: yesno
  - "The defendant stalked you": recent_incident_stalked_users1
    datatype: yesnoradio
    show if: recent_incident_stalked
  - "The defendant stalked the child/children": recent_incident_stalked_children
    datatype: yesnoradio
    show if: recent_incident_stalked
  - "Vermont law says it is stalking if has happened two times or more. On what date did they first stalk you?": recent_incident_stalked_date2
    datatype: date
    show if: recent_incident_stalked
  - "What was the second date that they stalked you?": recent_incident_stalked_date1
    datatype: date
    show if: recent_incident_stalked
  - note: |
      ---
    show if: recent_incident_stalked
  - "The defendant sexually assaulted you and/or the child/children. Sexual assault is defined in Vermont law here: [15 V.S.A 5131(5)](https://legislature.vermont.gov/statutes/section/12/178/05131)": recent_incident_assault
    datatype: yesno
  - "The defendant sexually assault you": recent_incident_assault_users1
    datatype: yesnoradio
    show if: recent_incident_assault
  - "The defendant sexually assault the child/children": recent_incident_assault_children
    datatype: yesnoradio
    show if: recent_incident_assault
  - note: |
      ---
    show if: recent_incident_assault
---
id: Was recent most serious too
question: |
  What happened
fields:
  - "Was the recent incident you described also the **most serious** incident that has happened?": recent_incident_most_serious
    datatype: yesnoradio
---
id: What happened most serious
question: |
  What happened -- most serious
subquestion: |
  Describe the **most serious** incident of abuse. Again, be as detailed as possible. The judge needs to know exactly what happened.
fields:
  - "What was the date of the most serious incident?": serious_incident_date
    datatype: date
  - "What was the time of the most serious incident?": serious_incident_time
    datatype: time
  - "In what town was the most serious incident?": serious_incident_town
    maxlength: 26
  - "In what state was the most serious incident?": serious_incident_state
    code: states_list() 
    default: Vermont
  - "Please describe the most serious incident with as much detail as possible.": serious_incident_description
    input type: area
    rows: 20
---
id: What happened other incidents
question: |
  What happened -- other incidents
fields:
  - "Were there other past incidents of serious violence or threats that you want to share with the judge?": other_incident
    datatype: yesnoradio
  - note: For each incident say when and where it happened; who else was there; and give details about any injuries resulting or any weapons used.
    show if: other_incident
  - "Please describe the any other incident(s) with as much detail as possible.": other_incident_description
    input type: area
    rows: 20
    show if: other_incident
---
id: Danger of more abuse
question: |
  Danger of more abuse
subquestion: |
  It's important to answer **Yes** to this question if you want to get a court order that starts right away.
fields:
  - "Is there immediate danger of more abuse from the defendant?": danger_more_abuse
    datatype: yesnoradio
    
  - "Select all that apply": danger_more_abuse_who
    datatype: checkboxes
    show if: danger_more_abuse
    none of the above: False
    minlength: 1
    choices:
      - "There is danger of more abuse to you": users1
      - "There is danger of more abuse to the child/children": children
    
  - "Include any information not already described before. Be as specific as possible.": danger_more_abuse_why
    input type: area
    show if: danger_more_abuse
    required: False
---
objects:
  - weapons: DAList.using(object_type=DAObject, complete_attribute="location")
---
id: Gather weapons
question: |
  Gather list of weapons
fields:
  - Does the defendant own or have access to guns/firearms or other deadly weapons?: weapons.there_are_any
    input type: radio
    choices:
      - Yes: True
      - No: False
      - I don't know: None

---
id: List of weapons
question: |
  List of weapons
subquestion: |
  We'll create a list of the weapons -- one at a time.
fields:
  - Describe weapon (handgun, rifle, knife, etc.). Include the make and model if you know.: weapons[i].description
    maxlength: 76
  - Where is this weapon located? (kitchen, car, friend's house, etc.): weapons[i].location
    maxlength: 76

---
id: Another weapon
question: |
  List of weapons
subquestion: |
  You have told us about these weapons:
  
  % for item in weapons:
    * ${ item.description }
  % endfor

fields:
  - Do you know about any other guns/firearms or other deadly weapons?: weapons.there_is_another
    input type: radio
    choices:
      - Yes: True
      - No: False
      - I don't know: False

---
id: Weapons
question: |
  Weapons
subquestion: |
  Weapons can make this a more dangerous time for you and/or your children. If you let the court know about weapons, they may be able to collect the weapons from the defendant as part of the court order. This can help keep you safe.
fields:
  - "Has the defendant used, displayed or threatened to use a **gun/firearm** against you or against another family member?": used_firearm
    datatype: yesnoradio
  - note: The question above asks specifically about fireams (guns). This next question is found on a different form and it asks about **any** deadly weapons.
  - "Has the defendant used, displayed or threatened to use a **gun/firearm or another deadly weapon** against you or another family member?": used_weapon
    datatype: yesnoradio
    
  - "Describe in detail how they used or threatened to use the weapon(s).": used_weapon_how
    input type: area
    show if: used_weapon
    
  - note: |
      <h2 class="h3">Access to weapons

  - Does the defendant own or have access to guns/firearms or other deadly weapons?: weapons.there_are_any
    input type: radio
    choices:
      - Yes: True
      - No: False
      - I don't know: None
      
#  - "Check this box if you have more weapons to list. You can enter them here and it will be attached  as an extra sheet.": extra_sheet_weapons
#    datatype: yesno
#    show if: weapon8
#    #  if extra_sheet_weapons: 
#    #    extra_sheets_attached = 1 
#  - Other weapons: weapons_overflow
#    input type: area
#    rows: 4
#    show if: extra_sheet_weapons
#continue button field: weapons_info
---
id: What you want to ask for in the RFA order
question: |
  What you want to ask for in the RFA order
subquestion: |
  **Choose all that apply to you.** 
  
  This is a list of things that you can ask the court for. If approved, they will be part of the Relief from Abuse order. 
  
  You can also ask for other things on an upcoming screen -- things that are specific to your situation.
  
  I want the court to:
fields:
  - "Order the defendant to not abuse me or my children, and not interfere with our personal liberty": request_not_abuse
    datatype: yesno
  - "I want the order to protect me from this.": request_not_abuse_users1
    datatype: yesno
    show if: request_not_abuse
  - "I want the order to protect my child/children from this.": request_not_abuse_children
    datatype: yesno
    show if: request_not_abuse
  - note: |
      ---
    show if: request_not_abuse
    
  - "Order the defendant to not stalk or sexually assault me or my child/children": request_no_stalking_assault
    datatype: yesno
  - "I want the order to stop stalking.": request_no_stalking
    datatype: yesno
    show if: request_no_stalking_assault
  - "I want the order to stop sexual assault.": request_no_assault
    datatype: yesno
    show if: request_no_stalking_assault
  - "I want the order to protect me from this.": request_no_assault_users1
    datatype: yesno
    show if: request_no_stalking_assault
  - "I want the order to protect my child/children from this.": request_no_assault_children
    datatype: yesno
    show if: request_no_stalking_assault
  - note: |
      ---
    show if: request_no_stalking_assault
    
  - "Order the defendant to immediately leave the residence, and to order sole possession to me": request_leave
    datatype: yesno
  - "Order the defendant not to possess or purchase guns/firearms for the duration of the order": request_no_firearms
    datatype: yesno
  - "Order the defendant to surrender immediately to law enforcement all guns/firearms that they own, possess or control": request_surrender_firearms
    datatype: yesno
  - "Order the defendant to pay my temporary living expenses": request_living_expenses
    datatype: yesno
  - "Order the defendant to pay temporary child support": request_child_support
    datatype: yesno
  - "Order the defendant to stop cruelly treating pets": request_no_pet_harm
    datatype: yesno
  - "I want the order to protect the pets owned by me or the defendant.": request_no_pet_users1
    datatype: yesno
    show if: request_no_pet_harm
  - "I want the order to protect the pets owned by my child/children.": request_no_pet_children
    datatype: yesno
    show if: request_no_pet_harm    
  - note: |
      ---
    show if: request_no_pet_harm
    
  - "Order me to get temporary possession and control of the pet(s)": request_control_of_pet
    datatype: yesno
    show if: request_no_pet_harm  
  - "Order the defendant to stay a certain distance away": request_stay_away
    datatype: yesno
  - "How many feet away?": request_stay_away_feet
    maxlength: 5
    show if: request_stay_away
  - "I want the order to protect me from this.": request_stay_away_users1
    datatype: yesno
    show if: request_stay_away
  - "I want the order to protect my child/children from this.": request_stay_away_children
    datatype: yesno
    show if: request_stay_away
  - note: |
      ---
    show if: request_stay_away
    
  - "Order the defendant to not contact me or my child/children in any way": request_no_contact
    datatype: yesno
  - "I want the order to protect me from this.": request_no_contact_users1
    datatype: yesno
    show if: request_no_contact
  - "I want the order to protect my child/children from this.": request_no_contact_children
    datatype: yesno
    show if: request_no_contact
  - note: |
      ---
    show if: request_no_contact

  - "Award temporary Parental Rights and Responsibilities (custody) of our child/children to me or someone else. (The child(ren) of you and the defendant.)": request_temp_PRR
    datatype: yesno  
  - note: If you choose custody, we will ask for the names of the children on the next screen.
    show if: request_temp_PRR
    
  - "I want to ask for something else. (You can write what you want on an upcoming screen.)": other_request
    datatype: yesno

validation code: |
  
  if request_not_abuse and not (request_not_abuse_users1 or request_not_abuse_children ):
        validation_error("Please answer at least one of the options.")
        
  if request_no_stalking_assault and not (request_no_stalking or request_no_assault or request_no_assault_users1 or request_no_assault_children):
        validation_error("Please answer at least one of the options.")
  
  if request_no_pet_harm and not (request_no_pet_users1 or request_no_pet_children or request_control_of_pet):
        validation_error("Please answer at least one of the options.") 
        
  if request_stay_away and request_stay_away_feet and not (request_stay_away_users1 or request_stay_away_children):
        validation_error("Please answer at least one of the options.")

  if request_no_contact and not (request_no_contact_users1 or request_no_contact_children):
        validation_error("Please answer at least one of the options.") 

  if not (request_not_abuse or request_no_stalking_assault or request_leave or request_no_firearms or request_surrender_firearms or request_living_expenses or request_child_support or request_no_pet_harm or request_stay_away or request_no_contact or other_request or request_temp_PRR):
    validation_error("Please select at least one option.")

---
code: |
  for child in children: 
    child.custody_wanted
  get_kids_relationships = True
  
    
---
id: Childrens relationships
generic object: Individual     
question: |
  Custody of ${x.name.first}
fields:
  - I want temporary custody of ${x.name.first}: x.custody_wanted
    datatype: yesnoradio
  - "In 1 or 2 words, what is ${x.name.first}'s relationship to you?": x.relationship_users1
    maxlength: 19
    show if: x.custody_wanted
  - "What is ${x.name.first}'s relationship to the defendant?": x.relationship_OP
    maxlength: 21
    show if: x.custody_wanted
---
id: Put something else in order
question: |
  What else do you want to ask for in the RFA order
fields:
#  - "Do you want to ask the court for something else as part of the RFA order?": request_other
#    datatype: yesnoradio
  - note: |
      Start with a phrase like: 'Order the defendant to ...' or 'Order me to get ...': 
  - "Explain what else you'd like the RFA order to do": request_other_description
    maxlength: 70
    hint: Order the defendant to...
---
id: Emergency order
question: |
  Asking for your order to go into effect right away
subquestion: |
  Do you want all of your requests to be put in place now — in an emergency order? Most people choose **Yes** to get protection as soon as possible.
fields:
  - "I request on an emergency basis the same relief as requested above, to the extent available.": request_all_emergency
    datatype: yesnoradio
---
id: Existing orders or court proceedings
question: |
  Existing orders or court proceedings
subquestion: |
  Is there an existing court order or a pending court proceeding involving you, the defendant, and/or your child or children? 
  
  Don't include things you plan to do. Only include things that have been submitted to the court already.
fields:  
  - "Select all that apply": existing_order
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - "For divorce or separation?": existing_order_divorce
      - "For a civil union dissolution?": dissolution
      - "For Relief from Abuse?": existing_order_RFA
      - "For a criminal matter?": criminal_proceeding
      - "For parentage?": parentage_order
      - "For guardianship?": guardianship_order
      - "For a juvenile (DCF) matter?": juvenile_order
      - "For child support?": child_support_order
      
  - "In what state(s) is the existing order or a pending court proceeding?": existing_order_state
    maxlength: 34
    required: False
    js show if: |
      val("existing_order['existing_order_divorce']") || val("existing_order['dissolution']") || val("existing_order['existing_order_RFA']") || val("existing_order['criminal_proceeding']") || val("existing_order['parentage_order']") || val("existing_order['guardianship_order']") || val("existing_order['juvenile_order']") || val("existing_order['child_support_order']") 
        
    
  - "In what county/counties is the existing order or a pending court proceeding?": existing_order_county
    maxlength: 36
    required: False
    js show if: |
        val("existing_order['existing_order_divorce']") || val("existing_order['dissolution']") || val("existing_order['existing_order_RFA']") || val("existing_order['criminal_proceeding']") || val("existing_order['parentage_order']") || val("existing_order['guardianship_order']") || val("existing_order['juvenile_order']") || val("existing_order['child_support_order']")
    
  - "What is the name of your attorney for the existing order or a pending court proceeding -- if you have one?": existing_order_users_attorney
    maxlength: 25
    required: False
    js show if: |
        val("existing_order['existing_order_divorce']") || val("existing_order['dissolution']") || val("existing_order['existing_order_RFA']") || val("existing_order['criminal_proceeding']") || val("existing_order['parentage_order']") || val("existing_order['guardianship_order']") || val("existing_order['juvenile_order']") || val("existing_order['child_support_order']")
     
  - "What is the name of the other attorney for the existing order or a pending court proceeding -- if the defendant has one?": existing_order_OP_attorney
    maxlength: 25
    required: False
    js show if: |
        val("existing_order['existing_order_divorce']") || val("existing_order['dissolution']") || val("existing_order['existing_order_RFA']") || val("existing_order['criminal_proceeding']") || val("existing_order['parentage_order']") || val("existing_order['guardianship_order']") || val("existing_order['juvenile_order']") || val("existing_order['child_support_order']")

---
id: About your home
question: |
  Shelter or a place to stay?
subquestion: |
  Have you been or will you be forced from your home -- and be without shelter -- unless the defendant is ordered to leave your home?
fields:
  - no label: users1_no_shelter
    datatype: yesnoradio
  - note: What is the address of the home?
    show if: users1_no_shelter
  - "On one line, include: street address, apt./unit number, town and state abbreviation.": residence_shared_address
    maxlength: 48
    show if: users1_no_shelter
  - note: Rent or own?
    show if: users1_no_shelter
  - "The home is rented.": residence_rented
    datatype: yesno
    show if: users1_no_shelter
  - "The home is owned.": residence_owned
    datatype: yesno
    show if: users1_no_shelter
  - note: In whose name?
    show if: users1_no_shelter
  - "It is rented or owned in both of our names.": residence_of_both
    datatype: yesno
    show if: users1_no_shelter
  - "It is rented or owned in my name.": residence_of_users1
    datatype: yesno
    show if: users1_no_shelter
  - "It is rented or owned in the defendant's name.": residence_of_OP
    datatype: yesno
    show if: users1_no_shelter
  - "It is rented or owned by someone else.": residence_of_other
    datatype: yesno
    show if: users1_no_shelter
---
id: Details for law enforcement
question: |
  Details for law enforcement to serve the RFA order
subquestion: |
  If your RFA order is approved by a judge, law enforcement will be sent to "serve" (deliver) the order to the defendant. The following information is used by law enforcement to do that quickly and safely.
  
  You may notice a couple similar questions -- but asked in a new way -- as you provide details for the law enforcement form, which is called the Protection Order Service Information form.
continue button field: details_for_law_enforcement
---
id: About the home
question: |
  The defendant's home address at this time
subquestion: |
  Tell law enforcement where the defendant lives at this time. If they live with you, provide that address and information. If you don't know an answer, say I don't know.  
fields:
  - "The house or building number on the street (Example: Enter '10' if it's 10 Main Street.)": house
    maxlength: 10
  - "Name of the street or Town Road number (Example: Enter 'Main Street')": other_parties1_street_only
    maxlength: 28
  - "Town / city": other_parties1_city
    maxlength: 23
  - "State": other_parties1_state
    maxlength: 5
  - "If you don't have a street address, describe the location of the home.": location_of_home
    input type: area
    required: False
  - "Describe what the defendant's home looks like. If it's an apartment, include the apartment number.": description_of_home
    input type: area
    maxlength: 220
  - "Best days and times to contact the defendant at home.": best_contact_time
    input type: area
    maxlength: 220
---
id: About the defendant's vehicle
question: |
  The defendant's vehicle (their car or truck)
subquestion: |
  If you don't know an answer on this screen, leave it blank.
fields:
  - "What brand car or truck do they drive? (Ford, Honda, etc.)": vehicle_make
    maxlength: 19
    required: False
  - "What model car or truck? (F-150, Civic)": vehicle_model
    maxlength: 17
    required: False
  - "Color of car or truck": vehicle_color
    maxlength: 13
    required: False
  - "Vehicle plate number": vehicle_plate
    maxlength: 14
    required: False
  - "Vehicle year": vehicle_year
    maxlength: 6
    required: False
---

id: More on your relationship to defendant
question: |
  More on your relationship to defendant
subquestion: |
  Law enforcement asks these specific questions on their confidential form.
fields:  
  - "Select any that apply to you.": relationship_for_LE
    datatype: checkboxes
    none of the above: False
    required: False
    choices:  
      - "I am the spouse or ex-spouse (former spouse) of the defendant.": spouse_or_ex_spouse
      - "The defendant and I have lived together while having a sexual relationship together.": lived_together
      - "The defendant and I have a child or children in common.": had_kids_together
      - "I am the defendant’s child or step-child, **or** I am filing on behalf of that child or step-child.": defendants_child
      - "I am the child of a person who currently or has in the past lived with the defendant while having a sexual relationship together, **or** I am filing on behalf of that child.": plaintiffs_child

---
id: Defendant s work information
question: |
  Defendant's work information
subquestion: |
  Tell us about the defendant's workplace and work hours. Law enforcement may serve the order there if they cannot find the defendant at home.
fields:
  - "Defendant's employer": employer
    maxlength: 36
    required: False
  - "Their employers street address": employers_street_address
    maxlength: 29
    required: False
  - "Employers city and state": employers_city_state
    maxlength: 36
    required: False
  - "Work hours on Mondays": work_mondays
    maxlength: 11
    required: False
  - "Work hours on Tuesdays": work_tues
    maxlength: 11
    required: False
  - "Work hours on Wednesdays": work_weds
    maxlength: 11
    required: False
  - "Work hours on Thursdays": work_thurs
    maxlength: 11
    required: False
  - "Work hours on Fridays": work_fri
    maxlength: 11
    required: False
  - "Work hours on Saturdays": work_sat
    maxlength: 11
    required: False
  - "Work hours on Sundays": work_sun
    maxlength: 11
    required: False
---
#Make all these not required
id: Other places the defendant might be
question: |
  Other places the defendant might be
subquestion: |
  Where else does the defendant spend time? This can help law enforcement find the defendant. Leave this screen blank if you can't think of another place.
fields:
  - note: |
      <h2 class="h4">Other location:</h2>
  - "The house or building number on the street (Example: Enter '10' if it's 10 Main Street.)": house2
    maxlength: 10
    required: False
  - "Street or Town Road (Example: Enter 'Main Street')": other_location_street_address
    maxlength: 28
    required: False
  - "Town / city": other_location_city
    maxlength: 23
    required: False
  - "State": other_location_state
    maxlength: 5
    required: False
  - "Phone number at that location": other_location_phone
    maxlength: 13
    required: False
  - "I have another place to list.": other_location2
    datatype: yesno
  - note: |
      <h2 class="h4">Another location:</h2>
    show if: other_location2
  - "The house or building number on the street (Example: Enter '10' if it's 10 Main Street.)": house3
    maxlength: 10
    show if: other_location2
  - "Street or Town Road (Example: Enter 'Main Street').": other_location2_street_address
    maxlength: 27
    show if: other_location2
  - "Town / city": other_location2_city
    maxlength: 23
    show if: other_location2
  - "State": other_location2_state
    maxlength: 5
    show if: other_location2
  - "Phone number at that location": other_location2_phone
    maxlength: 13
    show if: other_location2
---
id: What the defendant looks like
question: |
  What the defendant looks like
subquestion: |
  These are questions that will help law enforcement identify the defendant so they can serve the RFA order.
fields:
  - note: |
      <h2 class="h4">Defendant's sex/gender:</h2>
      Note that law enforcement only offers these two checkboxes at this time.
  - "Female": sex_female
    datatype: yesno
  - "Male": sex_male
    datatype: yesno
  - note: |
      <h2 class="h4">Race:</h2>
  - "Select one.": race
    datatype: checkboxes
    none of the above: False
    minlength: 1
    maxlength: 1
    choices:        
      - "White": race_white
      - "African-American": race_black
      - "Native American": race_native
      - "Asian": race_asian
      - "Other": race_other
  - note: |
      <h2 class="h4">Skin color/tone:</h2>
  - "Select one.": skin
    datatype: checkboxes
    none of the above: False
    minlength: 1
    maxlength: 1
    choices:              
      - "Light": skin_light
      - "Medium": skin_medium
      - "Dark": skin_dark
      - "Other": skin_other
  - note: |
      <h2 class="h4">Height:</h2>
  - "Height -- feet": other_parties1_height_ft
    maxlength: 5
  - "Height -- inches": other_parties1_height_in
    maxlength: 5
  - note: |
      <h2 class="h4">Weight:</h2>
  - "Weight -- in pounds": other_parties1_weight_lbs
    maxlength: 5
  - note: |
      <h2 class="h4">Eye color:</h2>
  - "Brown": eyes_brown
    datatype: yesno
  - "Blue": eyes_blue
    datatype: yesno
  - "Gray": eyes_gray
    datatype: yesno
  - "Green": eyes_green
    datatype: yesno
  - "Hazel": eyes_hazel
    datatype: yesno
  - "Other": eyes_other
    datatype: yesno
  - note: |
      <h2 class="h4">Glasses and contacts:</h2>
  - "Glasses": lenses_glasses
    datatype: yesno
  - "Contacts": lenses_contacts
    datatype: yesno
---
id: More about what the defendant looks like
question: |
  More about what the defendant looks like
fields:
  - note: |
      <h2 class="h4">Hair length:</h2>
  - "Select one.": hair
    datatype: checkboxes
    none of the above: False
    minlength: 1
    maxlength: 1
    choices:  
      - "Short": hair_short
      - "Medium": hair_medium
      - "Long": hair_long
      - "Bald": hair_bald
  - note: |
      <h2 class="h4">Hair color:</h2>
  - "Select one.": hair_color
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:  
      - "Brown": hair_brown
      - "Blond": hair_blond
      - "Black": hair_black
      - "Red": hair_red
      - "Gray / white": hair_gray
      - "Bald": hair_bald_color
      - "Other": hair_other
  - note: |
      <h2 class="h4">Facial hair:</h2>
  - "Beard": hair_beard
    datatype: yesno
  - "Mustache": hair_mustache
    datatype: yesno
  - note: |
      <h2 class="h4">Other identifiers:</h2>
  - "Tattoos": tattoos
    datatype: yesno
    required: False
  - "Where are the tattoos? What design(s)?": tattoos_location
    maxlength: 74
    show if: tattoos
  - "Scars or marks": scars
    datatype: yesno
  - "Where are the scars?": scars_location
    maxlength: 74
    show if: scars
  - "Body piercing / earrings": piercing
    datatype: yesno
  - "Where are the piercings?": piercing_location
    maxlength: 74
    show if: piercing
  - "Other identifying marks": other_marks
    datatype: yesno
  - "What are they and where are they?": marks_location
    maxlength: 74
    show if: other_marks
---
id: When law enforcement serves the order to the defendant
question: |
  When law enforcement serves (delivers) the order to the defendant
fields:
  - "If you get a RFA order, do you wish to be notified after the order is served?": notify_served
    datatype: yesnoradio
  - "What phone number should law enforcement call to notify you?": users1_notify_phone_number
    maxlength: 45
    show if: notify_served
  - "Will the defendant try to avoid being served this order?": avoid_served
    datatype: yesnoradio
  - "Does the defendant have guard dogs or vicious dogs?": guard_dog
    datatype: yesnoradio
  - "Is the defendant likely to be under the influence of drugs or alcohol?": under_infl
    datatype: yesnoradio
  - "Will the officer who serves this order be in any danger?": danger_for_officer
    datatype: yesnoradio
  - "Why will the officer be in danger?": danger_for_officer_why
    input type: area
    show if: danger_for_officer
---
id: Signing some but not all of your forms
question: |
  Signing some -- but not all -- of your forms
subquestion: |
  The Affidavit form requires the signature of a "Notary" or you can do that signature over the phone with the court. For that reason, we wait to sign the Affidavit form. We will give you instructions on the next steps after you finish this interview and see your forms.
fields:
  - "Please type your name. This will appear under your signature.": printed_signature
    maxlength: 34
  - "Date of your signature for these forms": date
    datatype: date
    required: False
    default: |
      ${ today() }
  -  note: |
      You can change this date later or leave it blank for now if you want.
      

  
---
id: preview RFApackage
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  #${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_RFApackage'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: RFApackage_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---


#####################################################################
######################### REVIEW SCREEN ######################
---
id: RFApackage review screen
event: review_RFApackage
question: |
  Review your answers
subquestion: |
  Edit your answers here and when you are done, scroll to the bottom and select "Resume."
review:
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: trial_court_name
    button: |
      **You want to file in Family Court of this county:**
      ${ trial_court_name }
  - Edit: users.revisit
    button: |
      **User -- usually you**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **Other party -- the defendant**

      % for item in other_parties:
        * ${ item }
      % endfor

  - Edit: weapons.there_are_any
    button: |
      **Does the defendant have guns/firearms or deadly weapons?**:
      % if weapons.there_are_any is True:
      Yes
      % elif weapons.there_are_any is False:
      No
      % else: 
      I don't know
      % endif
      
  - Edit: weapons.revisit
    button: |
      **List of weapons that defendant has access to**:
      
      % for item in weapons:
        * ${ item }
      % endfor
  - Edit: recent_incident_date
    button: |
      **What was the date of the most recent incident?**:
      ${ recent_incident_date }
  - Edit: recent_incident_time
    button: |
      **What was the time of the most recent incident?**:
      ${ recent_incident_time }
  - Edit: recent_incident_town
    button: |
      **In what town was the most recent incident?**:
      ${ recent_incident_town }
  - Edit: recent_incident_state
    button: |
      **In what state was the most recent incident?**:
      ${ recent_incident_state }
  - Edit: recent_incident_description
    button: |
      **Please describe the most recent incident with as much detail as possible.**:
      > ${ single_paragraph(recent_incident_description) }
  - Edit: recent_incident_most_serious
    button: |
      **Was that recent incident the most serious incident that happened?**:
      ${ word(yesno(recent_incident_most_serious)) }
  - Edit: serious_incident_date
    button: |
      **What was the date of the most serious incident?**:
      ${ serious_incident_date }
  - Edit: serious_incident_time
    button: |
      **What was the time of the most serious incident?**:
      ${ serious_incident_time }
  - Edit: serious_incident_town
    button: |
      **In what town was the most serious incident?**:
      ${ serious_incident_town }
  - Edit: serious_incident_state
    button: |
      **In what state was the most serious incident?**:
      ${ serious_incident_state }
  - Edit: serious_incident_description
    button: |
      **Please describe the most serious incident with as much detail as possible.**:
      > ${ single_paragraph(serious_incident_description) }
  - Edit: other_incident_description
    button: |
      **Please describe the any other incident(s) with as much detail as possible.**:
      > ${ single_paragraph(other_incident_description) }
  - Edit: extra_sheets_attached
    button: |
      **Are you attaching extra sheets with more weapons listed?**:
      ${ extra_sheets_attached }
  - Edit: used_weapon
    button: |
      **Has defendant used, displayed or threatened to use a gun/firearm OR another deadly weapon against you or another family member?**": 
      ${ word(yesno(used_weapon)) }
  - Edit: used_firearm
    button: |
      **Has the defendant used, displayed or threatened to use a gun/firearm against you or against a family member?**:
      ${ word(yesno(used_firearm)) }
  - Edit: used_weapon_how
    button: |
      **Describe in detail how they used or threatened to use the weapon?**:
      > ${ single_paragraph(used_weapon_how) }
  - Edit: danger_more_abuse
    button: |
      **Is there danger of more abuse?**:
      ${ word(yesno(danger_more_abuse)) }
  - Edit: danger_more_abuse_why
    button: |
      **Explain why you think there is danger of more abuse. Be as specific as possible.**:
      > ${ single_paragraph(danger_more_abuse_why) }
  - Edit: other_parties1_military
    button: |
      **Is the defendant a current member of the military?**:
      ${ word(yesno(other_parties1_military)) }
  - Edit: printed_signature
    button: |
      **Please type your name. This will appear under your signature.**:
      ${ printed_signature }
  - Edit: users1_address_mailing
    button: |
      **If you have a PO Box, or your mailing address is different than your street address, enter it here. (Example: P.O. Box 111)**:
      ${ users1_address_mailing }
  - Edit: users1_work_phone_number
    button: |
      **What is your work phone number?**:
      ${ users1_work_phone_number }
  - Edit: share_contact
    button: |
      **Do you want to share your contact information. THIS SHOULD BE ANSWERED NO IF YOU WANT TO KEEP YOUR INFORMATION CONFIDENTIAL -- EXCEPT FOR LAW ENFORCEMENT?**:
      ${ word(yesno(share_contact)) }
  - Edit: signature_date
    button: |
      **Date of signature**:
      ${ signature_date }
  - Edit: is_spouse
    button: |
      **Is the defendant your spouse?**:
      ${ word(yesno(is_spouse)) }
  - Edit: ex_spouse
    button: |
      **Is the defendant an ex-spouse (former spouse)?**:
      ${ word(yesno(ex_spouse)) }
  - Edit: family_member
    button: |
      **Is the defendant a member of your family?**:
      ${ word(yesno(family_member)) }
  - Edit: family_member_description
    button: |
      **In a word, what is your relationship to this family member**:
      ${ family_member_description }
#  - Edit: spouses.revisit
#    button: |
#      **Spouses**
#
#      % for item in spouses:
#        * ${ item }
#      % endfor
  - Edit: live_together
    button: |
      **Is the defendant someone you have been living with or sharing occupancy?**:
      ${ word(yesno(live_together)) }
  - Edit: sexual_relationship
    button: |
      **Is the defendant someone with whom you have had a sexual relationship?**:
      ${ word(yesno(sexual_relationship)) }
  - Edit: dating
    button: |
      **Is the defendant someone you have dated?**:
      ${ word(yesno(dating)) }
  - Edit: other_relationship
    button: |
      **Does the defendant have a different relationship to you?**:
      ${ word(yesno(other_relationship)) }
  - Edit: other_relationship_description
    button: |
      **In a word, what is that relationship?**:
      ${ other_relationship_description }
  - Edit: existing_order_divorce
    button: |
      **Is there an existing order or a pending court proceeding for divorce or separation?**:
      ${ word(yesno(existing_order["existing_order_divorce"])) }  
  - Edit: dissolution
    button: |
      **Is there an existing order or a pending court proceeding for a civil union dissolution?**:
      ${ word(yesno(existing_order["dissolution"])) }
  - Edit: existing_order_RFA
    button: |
      **Is there an existing order or a pending court proceeding for Relief from Abuse?**:
      ${ word(yesno(existing_order["existing_order_RFA"])) }
  - Edit: criminal_proceeding
    button: |
      **Is there an existing order or a pending court proceeding for a criminal matter?**:
      ${ word(yesno(existing_order["criminal_proceeding"])) }
  - Edit: parentage_order
    button: |
      **Is there an existing order or a pending court proceeding for parentage?**:
      ${ word(yesno(existing_order["parentage_order"])) }
  - Edit: guardianship_order
    button: |
      **Is there an existing order or a pending court proceeding for guardianship?**:
      ${ word(yesno(existing_order["guardianship_order"])) }
  - Edit: juvenile_order
    button: |
      **Is there an existing order or a pending court proceeding for a juvenile (DCF) matter?**:
      ${ word(yesno(existing_order["juvenile_order"])) }
  - Edit: child_support_order
    button: |
      **Is there an existing order or a pending court proceeding for child support?**:
      ${ word(yesno(existing_order["child_support_order"])) }
  - Edit: existing_order_state
    button: |
      **In what state is the existing order or a pending court proceeding?**:
      ${ existing_order_state }
  - Edit: existing_order_county
    button: |
      **In what county is the existing order or a pending court proceeding?**:
      ${ existing_order_county }
  - Edit: existing_order_users_attorney
    button: |
      **What is the name of your attorney for the existing order or a pending court proceeding -- if you have one?**:
      ${ existing_order_users_attorney }
  - Edit: existing_order_OP_attorney
    button: |
      **What is the name of the other attorney for the existing order or a pending court proceeding -- if the defendant has one?**:
      ${ existing_order_OP_attorney }
#  - Edit: recent_incident_yes
#    button: |
#      **Has there been a recent incident of abuse?**:
#      ${ word(yesno(recent_incident_yes)) }
  - Edit: recent_incident_users1
    button: |
      **Were you the target of the recent abuse?**:
      ${ word(yesno(recent_incident_users1)) }
  - Edit: recent_incident_children
    button: |
      **Were your children the target of the recent abuse? Check both if they both apply.**:
      ${ word(yesno(recent_incident_children)) }
  - Edit: recent_incident_children_names
    button: |
      **What are the names of the children who were the target of the recent abuse? List their names with commas in between.**:
      ${ recent_incident_children_names }
  - Edit: recent_incident_harm
    button: |
      **Did the defendant cause or attempt to cause physical harm?**:
      ${ word(yesno(recent_incident_harm)) }
  - Edit: recent_incident_fear
    button: |
      **Did the defendant place you and/or them in fear of imminent serious physical harm?**:
      ${ word(yesno(recent_incident_fear)) }
  - Edit: recent_incident_abused
    button: |
      **Did the defendant abuse the child/children -- physically injured or otherwise treated the child(ren) in a manner which placed their life, health, development or welfare in jeopardy?**:
      ${ word(yesno(recent_incident_abused)) }
  - Edit: recent_incident_stalked
    button: |
      **Did the defendant stalk you or the child/children?**:
      ${ word(yesno(recent_incident_stalked)) }
  - Edit: recent_incident_stalked_children
    button: |
      **Did the defendant stalk the child/children?**:
      ${ word(yesno(recent_incident_stalked_children)) }
  - Edit: recent_incident_stalked_users1
    button: |
      **Did the defendant stalk you?**:
      ${ word(yesno(recent_incident_stalked_users1)) }
  - Edit: recent_incident_stalked_date2
    button: |
      **On what date did they first stalk you?**:
      ${ recent_incident_stalked_date2 }
  - Edit: recent_incident_stalked_date1
    button: |
      **What was the second date that they stalked you?**:
      ${ recent_incident_stalked_date1 }
  - Edit: recent_incident_assault_children
    button: |
      **Did the defendant sexually assault the child/children?**:
      ${ word(yesno(recent_incident_assault_children)) }
  - Edit: recent_incident_assault
    button: |
      **Did the defendant sexually assault you and/or the child/children?**:
      ${ word(yesno(recent_incident_assault)) }
  - Edit: recent_incident_assault_users1
    button: |
      **Did the defendant sexually assault you?**:
      ${ word(yesno(recent_incident_assault_users1)) }
  - Edit: danger_more_abuse_who
    button: |
      **Is there danger of more abuse to the child/children?**:
      ${ word(yesno(danger_more_abuse_who["children"])) }
  - Edit: danger_more_abuse_who
    button: |
      **Is there danger of more abuse to you?**:
      ${ word(yesno(danger_more_abuse_who["users1"])) }
  - Edit: used_weapon
    button: |
      **Did the defendant use, display or threaten to use a **gun/ firearm or other deadly weapon** against you or against a family member?**:
      ${ word(yesno(used_weapon)) }
  - Edit: incarcerated
    button: |
      **Is the defendant incarcerated and has been convicted of one of the crimes specified in 15 V.S.A. 1103 (c)(1)(B)?**:
      ${ word(yesno(incarcerated)) }
  - Edit: users1_no_shelter
    button: |
      **Will you be forced from your home and be without shelter -- unless the defendant is ordered to leave your home?**:
      ${ word(yesno(users1_no_shelter)) }
  - Edit: residence_shared_address
    button: |
      **What is the residence that you would like the defendant to leave (street address, town and state)?**:
      ${ word(yesno(residence_shared_address)) }
  - Edit: residence_owned
    button: |
      **Does one or both of you own your home?**:
      ${ word(yesno(residence_owned)) }
  - Edit: residence_rented
    button: |
      **Does one or both of you rent your home?**:
      ${ word(yesno(residence_rented)) }
  - Edit: residence_of_OP
    button: |
      **Is it owned or rented in the defendant's name?**:
      ${ word(yesno(residence_of_OP)) }
  - Edit: residence_of_other
    button: |
      **Is it owned or rented by someone else?**:
      ${ word(yesno(residence_of_other)) }
  - Edit: residence_of_both
    button: |
      **Is it owned or rented in both of your names?**:
      ${ word(yesno(residence_of_both)) }
  - Edit: reach_up_users1
    button: |
      **Do you get Reach Up benefits from the state?**:
      ${ word(yesno(reach_up_users1)) }
  - Edit: reach_up_OP
    button: |
      **Does the defendant get Reach Up benefits from the state?**:
      ${ word(yesno(reach_up_OP)) }
  - Edit: request_not_abuse_children
    button: |
      **Do you want the court order to protect the child/children from this?**:
      ${ word(yesno(request_not_abuse_children)) }
  - Edit: request_not_abuse_users1
    button: |
      **Do you want the court order to protect you from this?**:
      ${ word(yesno(request_not_abuse_users1)) }
  - Edit: request_not_abuse
    button: |
      **Do you want the court to order the defendant to not abuse you or the children, and not interfere with your personal liberty?**:
      ${ word(yesno(request_not_abuse)) }
  - Edit: request_no_stalking_assault
    button: |
      **Do you want the court to order the defendant to not stalk or sexually assault you or the child/children?**:
      ${ word(yesno(request_no_stalking_assault)) }
  - Edit: request_no_stalking
    button: |
      **Do you want the order to stop stalking?**:
      ${ word(yesno(request_no_stalking)) }
  - Edit: request_no_assault
    button: |
      **Do you want the order to stop sexual assault?**:
      ${ word(yesno(request_no_assault)) }
  - Edit: request_no_assault_users1
    button: |
      **Do you want the court order to protect you from this?**:
      ${ word(yesno(request_no_assault_users1)) }
  - Edit: request_no_assault_children
    button: |
      **Do you want the court order to protect the child/children from this?**:
      ${ word(yesno(request_no_assault_children)) }
  - Edit: request_leave
    button: |
      **Do you want the court to order the defendant to immediately leave the residence, and to order sole possession to you?**:
      ${ word(yesno(request_leave)) }
  - Edit: request_no_firearms
    button: |
      **Do you want the court to order the defendant not to possess or purchase firearms for the duration of the order?**:
      ${ word(yesno(request_no_firearms)) }
  - Edit: request_surrender_firearms
    button: |
      **Do you want the court to order the defendant to surrender immediately to law enforcement all guns/firearms that they own, possess or control?**:
      ${ word(yesno(request_surrender_firearms)) }
  - Edit: request_living_expenses
    button: |
      **Do you want the court to order the defendant to pay your temporary living expenses?**:
      ${ word(yesno(request_living_expenses)) }
  - Edit: request_child_support
    button: |
      **Do you want the court to order the defendant to pay temporary child support?**:
      ${ word(yesno(request_child_support)) }
  - Edit: request_no_pet_children
    button: |
      **Do you want the court order to protect the pets owned by the child/children?**:
      ${ word(yesno(request_no_pet_children)) }
  - Edit: request_no_pet_harm
    button: |
      **Do you want the court to order the defendant to stop cruelly treating pets?**:
      ${ word(yesno(request_no_pet_harm)) }
  - Edit: request_no_pet_users1
    button: |
      **Do you want the court order to protect the pets owned by you or the defendant?**:
      ${ word(yesno(request_no_pet_users1)) }
  - Edit: request_control_of_pet
    button: |
      **Do you want the court to order you to have temporary possession and control of any pets?**:
      ${ word(yesno(request_control_of_pet)) }
  - Edit: request_stay_away_children
    button: |
      **Do you want the court order to protect the child/children from this?**:
      ${ word(yesno(request_stay_away_children)) }
  - Edit: request_stay_away_feet
    button: |
      **How many feet away do you want the defendant to stay?**:
      ${ request_stay_away_feet }
  - Edit: request_stay_away_users1
    button: |
      **Do you want the court order to protect you from this?**:
      ${ word(yesno(request_stay_away_users1)) }
  - Edit: request_stay_away
    button: |
      **Do you want the court to order the defendant to stay a certain distance away from you (measured in feet)?**:
      ${ word(yesno(request_stay_away)) }
  - Edit: request_no_contact_users1
    button: |
      **Do you want the court order to protect you from this?**:
      ${ word(yesno(request_no_contact_users1)) }
  - Edit: request_no_contact_children
    button: |
      **Do you want the court order to protect the child/children from this?**:
      ${ word(yesno(request_no_contact_children)) }
  - Edit: request_no_contact
    button: |
      **Do you want the court to order the defendant to not contact you or the child/children in any way?**:
      ${ word(yesno(request_no_contact)) }
  - Edit: request_temp_PRR
    button: |
      **Do you want the court to award temporary Parental Rights and Responsibilities of the child/children to you or someone else? (Child(ren) of you and the defendant)**:
      ${ word(yesno(request_temp_PRR)) }
  - Edit: children.revisit
    button: |
      **Children**

      % for item in children:
        * ${ item }
      % endfor
  - Edit: children1_relationship_users1
    button: |
      **This child's -- ${ children[0] } -- relationship to you?**:
      ${ children[0].relationship_users1 }
  - Edit: children1_relationship_OP
    button: |
      **This child's -- ${ children[0] } -- relationship to the defendant?**:
      ${ children[0].relationship_OP }
  - Edit: children2_relationship_users1
    button: |
      **This child's -- ${ children[1] } -- relationship to you?**:
      ${ children[1].relationship_users1 }
  - Edit: children2_relationship_OP
    button: |
      **This child's -- ${ children[1] } -- relationship to the defendant?**:
      ${ children[1].relationship_OP }
  - Edit: children3_relationship_users1
    button: |
      **This child's -- ${ children[2] } --relationship to you?**:
      ${ children[2].relationship_users1 }
  - Edit: children3_relationship_OP
    button: |
      **This child's -- ${ children[2] } -- relationship to the defendant?**:
      ${ children[2].relationship_OP }
  - Edit: other_request
    button: |
      **Request something else in the RFA order?**:
      ${ word(yesno(other_request)) }
  - Edit: request_other_description
    button: |
      **Description of other request**:
      ${ request_other_description }

  - Edit: request_all_emergency
    button: |
      **Do you want all of the previous requests to be put in place now -- in an emergency order? (Most people choose this to get protection right away.)**:
      ${ word(yesno(request_all_emergency)) }
  - Edit: date
    button: |
      **Date of your signature on complaint form**:
      ${ date }
  - Edit: users1_notify_phone_number
    button: |
      **Users1 notify phone number**:
      ${ users1_notify_phone_number }
  - Edit: notify_served
    button: |
      **If you get a RFA order, do you wish to be notified after the order is served?**:
      ${ word(yesno(notify_served)) }
  - Edit: spouse_or_ex_spouse
    button: |
      **I am the spouse or ex-spouse (former spouse) of the defendant.**:
      ${ word(yesno(relationship_for_LE["spouse_or_ex_spouse"])) }
  - Edit: lived_together
    button: |
      **The defendant and I have lived together while having a sexual relationship together.**:
      ${ word(yesno(relationship_for_LE["lived_together"])) }
  - Edit: had_kids_together
    button: |
      **The defendant and I have a child or children in common.**:
      ${ word(yesno(relationship_for_LE["had_kids_together"])) }
  - Edit: defendants_child
    button: |
      **I am the defendant’s child or step-child, or I am filing on behalf of that child or step-child.**:
      ${ word(yesno(relationship_for_LE["defendants_child"])) }
  - Edit: plaintiffs_child
    button: |
      **I am the child of the plaintiff who currently or has in the past lived with the defendant while having a sexual relationship together, or I am filing on behalf of that child.**:
      ${ word(yesno(relationship_for_LE["plaintiffs_child"])) }
  - Edit: suffix_sr
    button: |
      **Sr.**:
      ${ word(yesno(suffix_sr)) }
  - Edit: suffix_jr
    button: |
      **Jr.**:
      ${ word(yesno(suffix_jr)) }
  - Edit: suffix_first
    button: |
      **1st**:
      ${ word(yesno(suffix_first)) }
  - Edit: suffix_second
    button: |
      **2nd**:
      ${ word(yesno(suffix_second)) }
  - Edit: suffix_third
    button: |
      **3rd**:
      ${ word(yesno(suffix_third)) }
  - Edit: other_parties1_aliases
    button: |
      **List other names the defendant uses (aliases)**:
      ${ other_parties1_aliases }
  - Edit: sex_female
    button: |
      **Female**:
      ${ word(yesno(sex_female)) }
  - Edit: sex_male
    button: |
      **Male**:
      ${ word(yesno(sex_male)) }
  - Edit: race_white
    button: |
      **White**:
      ${ word(yesno(race["race_white"])) }
  - Edit: race_black
    button: |
      **African-American**:
      ${ word(yesno(race["race_black"])) }
  - Edit: race_native
    button: |
      **Native American**:
      ${ word(yesno(race["race_native"])) }
  - Edit: race_asian
    button: |
      **Asian**:
      ${ word(yesno(race["race_asian"])) }
  - Edit: race_other
    button: |
      **Other**:
      ${ word(yesno(race["race_other"])) }
  - Edit: skin_light
    button: |
      **Light**:
      ${ word(yesno(skin["skin_light"])) }
  - Edit: skin_medium
    button: |
      **Medium**:
      ${ word(yesno(skin["skin_medium"])) }
  - Edit: skin_dark
    button: |
      **Dark**:
      ${ word(yesno(skin["skin_dark"])) }
  - Edit: skin_other
    button: |
      **Other**:
      ${ word(yesno(skin["skin_other"])) }
  - Edit: other_parties1_height_ft
    button: |
      **Height -- feet**:
      ${ other_parties1_height_ft }
  - Edit: other_parties1_height_in
    button: |
      **Height -- inches**:
      ${ other_parties1_height_in }
  - Edit: other_parties1_weight_lbs
    button: |
      **Weight -- in pounds**:
      ${ other_parties1_weight_lbs }
  - Edit: eyes_brown
    button: |
      **Brown**:
      ${ word(yesno(eyes["eyes_brown"])) }
  - Edit: eyes_blue
    button: |
      **Blue**:
      ${ word(yesno(eyes["eyes_blue"])) }
  - Edit: eyes_gray
    button: |
      **Gray**:
      ${ word(yesno(eyes["eyes_gray"])) }
  - Edit: eyes_green
    button: |
      **Green**:
      ${ word(yesno(eyes["eyes_green"])) }
  - Edit: eyes_hazel
    button: |
      **Hazel**:
      ${ word(yesno(eyes["eyes_hazel"])) }
  - Edit: eyes_other
    button: |
      **Other**:
      ${ word(yesno(eyes["eyes_other"])) }
  - Edit: lenses_glasses
    button: |
      **Glasses**:
      ${ word(yesno(lenses_glasses)) }
  - Edit: lenses_contacts
    button: |
      **Contacts**:
      ${ word(yesno(lenses_contacts)) }
  - Edit: hair_brown
    button: |
      **Brown**:
      ${ word(yesno(hair_color["hair_brown"])) }
  - Edit: hair_blond
    button: |
      **Blond**:
      ${ word(yesno(hair_color["hair_blond"])) }
  - Edit: hair_black
    button: |
      **Black**:
      ${ word(yesno(hair_color["hair_black"])) }
  - Edit: hair_red
    button: |
      **Red**:
      ${ word(yesno(hair_color["hair_red"])) }
  - Edit: hair_gray
    button: |
      **Gray / white**:
      ${ word(yesno(hair_color["hair_gray"])) }
  - Edit: hair_bald_color
    button: |
      **Bald**:
      ${ word(yesno(hair_color["hair_bald_color"])) }
  - Edit: hair_other
    button: |
      **Other**:
      ${ word(yesno(hair_color["hair_other"])) }
  - Edit: hair_short
    button: |
      **Short**:
      ${ word(yesno(hair["hair_short"] )) }
  - Edit: hair_medium
    button: |
      **Medium**:
      ${ word(yesno(hair["hair_medium"] )) }
  - Edit: hair_long
    button: |
      **Long**:
      ${ word(yesno(hair["hair_long"] )) }
  - Edit: hair_bald
    button: |
      **Bald**:
      ${ word(yesno(hair["hair_bald"] )) }
  - Edit: hair_beard
    button: |
      **Beard**:
      ${ word(yesno(hair_beard)) }
  - Edit: hair_mustache
    button: |
      **Mustache**:
      ${ word(yesno(hair_mustache)) }
  - Edit: tattoos
    button: |
      **Tattoos**:
      ${ word(yesno(tattoos)) }
  - Edit: tattoos_location
    button: |
      **Where are the tattoos located?**:
      ${ tattoos_location }
  - Edit: scars
    button: |
      **Scars or marks**:
      ${ word(yesno(scars)) }
  - Edit: scars_location
    button: |
      **Where are the scars located?**:
      ${ scars_location }
  - Edit: piercing
    button: |
      **Body piercing / earrings**:
      ${ word(yesno(piercing)) }
  - Edit: piercing_location
    button: |
      **Where are the piercings located?**:
      ${ piercing_location }
  - Edit: other_marks
    button: |
      **Other identifying marks**:
      ${ word(yesno(other_marks)) }
  - Edit: marks_location
    button: |
      **Where are the marks located?**:
      ${ marks_location }
  - Edit: other_parties1_work_phone_number
    button: |
      **Defendant's work phone**:
      ${ other_parties1_work_phone_number }
  - Edit: other_parties1_other_phone_number
    button: |
      **Defendant's other phone**:
      ${ other_parties1_other_phone_number }
  - Edit: house
    button: |
      **Defendant's house or building number on the street (Example: Enter 10 if it's 10 Main Street.)**:
      ${ house }
  - Edit: location_of_home
    button: |
      **If you don't have a street address, describe the location of the home.**:
      > ${ single_paragraph(location_of_home) }
  - Edit: description_of_home
    button: |
      **Describe what the defendant's home looks like.**:
      > ${ single_paragraph(description_of_home) }
  - Edit: best_contact_time
    button: |
      **Best days and times to contact the defendant at home.**:
      > ${ single_paragraph(best_contact_time) }
  - Edit: employers_street_address
    button: |
      **Their employers street address**:
      ${ employers_street_address }
  - Edit: employer
    button: |
      **Defendant's employer**:
      ${ employer }
  - Edit: employers_city_state
    button: |
      **Employers city and state**:
      ${ employers_city_state }
  - Edit: work_mondays
    button: |
      **Work hours on Mondays**:
      ${ work_mondays }
  - Edit: work_tues
    button: |
      **Work hours on Tuesdays**:
      ${ work_tues }
  - Edit: work_weds
    button: |
      **Work hours on Wednesdays**:
      ${ work_weds }
  - Edit: work_thurs
    button: |
      **Work hours on Thursdays**:
      ${ work_thurs }
  - Edit: work_fri
    button: |
      **Work hours on Fridays**:
      ${ work_fri }
  - Edit: work_sat
    button: |
      **Work hours on Saturdays**:
      ${ work_sat }
  - Edit: work_sun
    button: |
      **Work hours on Sundays**:
      ${ work_sun }
  - Edit: other_location_street_address
    button: |
      **Where would they be if not at home or work? List the street address of another location.**:
      ${ other_location_street_address }
  - Edit: house2
    button: |
      **House or building number on the street**:
      ${ house2 }
  - Edit: other_location_city
    button: |
      **Town / city of that other location**:
      ${ other_location_city }
  - Edit: other_location_state
    button: |
      **State of that other location**:
      ${ other_location_state }
  - Edit: other_location_phone
    button: |
      **Phone number at that other location**:
      ${ other_location_phone }
  - Edit: other_location2_street_address
    button: |
      **List another street address if there is another location.**:
      ${ other_location2_street_address }
  - Edit: house3
    button: |
      **House or building number on the street**:
      ${ house3 }
  - Edit: other_location2_city
    button: |
      **Town / city of that location**:
      ${ other_location2_city }
  - Edit: other_location2_state
    button: |
      **State of that location**:
      ${ other_location2_state }
  - Edit: other_location2_phone
    button: |
      **Phone number at that location**:
      ${ other_location2_phone }
  - Edit: vehicle_plate
    button: |
      **Vehicle plate number**:
      ${ vehicle_plate }
  - Edit: vehicle_year
    button: |
      **Vehicle year**:
      ${ vehicle_year }
  - Edit: vehicle_make
    button: |
      **What brand car or truck do they drive? (Ford, Honda, etc.)**:
      ${ vehicle_make }
  - Edit: vehicle_model
    button: |
      **What model car or truck? (F-150, Civic)**:
      ${ vehicle_model }
  - Edit: vehicle_color
    button: |
      **Color of car or truck**:
      ${ vehicle_color }
  - Edit: avoid_served
    button: |
      **Will the defendant try to avoid being served this order?**:
      ${ word(yesno(avoid_served)) }
  - Edit: guard_dog
    button: |
      **Does the defendant have guard dogs or vicious dogs?**:
      ${ word(yesno(guard_dog)) }
  - Edit: under_infl
    button: |
      **Is the defendant likely to be under the influence of drugs or alcohol?**:
      ${ word(yesno(under_infl)) }
  - Edit: danger_for_officer
    button: |
      **Will the officer who serves this order be in any danger?**:
      ${ word(yesno(danger_for_officer)) }
  - Edit: danger_for_officer_why
    button: |
      **Why will the officer be in danger?**:
      > ${ single_paragraph(danger_for_officer_why) }
---
continue button field: users.revisit
question: |
  Edit user(s)
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.middle") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.middle
  - birthdate
  - address.zip
  - phone_number
  - email
  - signature
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other party / parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.last") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Mobile number: |
      row_item.mobile_number if defined("row_item.mobile_number") else ""
  - House number: |
      row_item.house if defined("row_item.house") else ""
  - Street name: |
      row_item.other_parties1_street_only if defined("row_item.other_parties1_street_only") else ""
  
edit:
  - name.last
  - birthdate
  - address.zip
  - phone_number
  - mobile_number
confirm: True

---
continue button field: spouses.revisit
question: |
  Edit spouses
subquestion: |
  ${ spouses.table }

  ${ spouses.add_action() }
---
table: spouses.table
rows: spouses
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: children.revisit
question: |
  Edit children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
edit:
  - name.first
  - birthdate
confirm: True

---
continue button field: weapons.revisit
question: |
  Edit the list of weapons
subquestion: |
  ${ weapons.table }

  ${ weapons.add_action() }
---
table: weapons.table
rows: weapons
columns:
  - Description: |
      row_item.description if defined("row_item.description") else ""
  - Location: |
      row_item.location if defined("row_item.location") else ""
edit:
  - description
  - location
confirm: True
---
#####################################################################
####################### DOWNLOAD #######################
id: download RFApackage
event: RFApackage_download
question: |
  Review your forms and download and/or print them
subquestion: |
  The interview is done. Your forms are ready to view.
  
  Select the "Edit your answers" button to fix any mistakes. Then, download your forms and the instructions sheet for the next steps to take. You can email the filled-in PDF forms to yourself or someone else, too.
  
  Consider creating a free account so you can save your progress. At any time choose "sign up" in the menu above, or "register" below.
  
  You can also use the Share feature to share a link to your interview with a trusted person. Important: If you use the Share feature, that person will be able to see and edit your answers online.

  ${ action_button_html(url_action('review_RFApackage'), label='Edit your answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - RFAcomplaint: ALDocument.using(title="RFA Complaint", filename="1_RFA-complaint", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - RFAaffidavit: ALDocument.using(title="RFA Affidavit", filename="3_RFA-affidavit", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - RFAconfidentialcontactinfo: ALDocument.using(title="RFA Confidential Contact Info", filename="4_RFA-confidential-contact-info", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - RFAserviceinfo: ALDocument.using(title="Protection Order Service Info", filename="2_RFA-service-info", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - RFApackage_Post_interview_instructions: ALDocument.using(title="Instructions for Next Steps to Take", filename="RFApackage_next_steps.docx", enabled=True, has_addendum=False)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[RFApackage_Post_interview_instructions, RFAaffidavit, RFAconfidentialcontactinfo, RFAcomplaint, RFAserviceinfo], filename="RFApackage", title="Download all forms", enabled=True)
  #- al_court_bundle: ALDocumentBundle.using(elements=[RFAaffidavit, RFAconfidentialcontactinfo, RFAcomplaint, RFAserviceinfo],  filename="RFApackage", title="All forms to deliver to court", enabled=True)
---


#####################################################################
######################### ATTACHMENTS ###########################
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: RFApackage_next_steps
  docx template file: RFApackage_next_steps.docx
  variable name: RFApackage_Post_interview_instructions[i]
  skip undefined: True
---
attachment:
  name: 3 RFA-affidavit
  filename: 3_RFA-affidavit
  variable name: RFAaffidavit[i]
  skip undefined: True
  pdf template file: 3_RFA-affidavit.pdf
  fields:
      - "docket_number__1": ${ docket_number }
      - "docket_number__2": ${ docket_number }
      - "docket_number": ${ docket_number }
      - "trial_court_county__1": ${ trial_court.address.county }
      - "trial_court_county__2": ${ trial_court.address.county }
      - "trial_court_county": ${ trial_court_name }
      - "users1_name__1": ${ users[0] }
      - "users1_name__2": ${ users[0] }
      - "users1_name": ${ users[0] }
      - "users1_birthdate__1": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_birthdate": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_birthdate__2": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_name__1": ${ other_parties[0] }
      - "other_parties1_name__2": ${ other_parties[0] }
      - "other_parties1_name": ${ other_parties[0] }
      - "other_parties1_birthdate__1": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate__2": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_address_address__1": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_address": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_address__2": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_city__1": ${ other_parties[0].address.city }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "other_parties1_address_city__2": ${ other_parties[0].address.city }
      - "other_parties1_address_state__1": ${ other_parties[0].address.state }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_state__2": ${ other_parties[0].address.state }
      - "other_parties1_address_zip__1": ${ other_parties[0].address.zip }
      - "other_parties1_address_zip": ${ other_parties[0].address.zip }
      - "other_parties1_weapon_yes": ${ weapons.there_are_any == True}
      - "other_parties1_weapon_no": ${ weapons.there_are_any == False }
      - "other_parties1_weapon_DK": ${ weapons.there_are_any == None }
      - "recent_incident_date__1": ${ format_date(recent_incident_date, format='M/d/yyyy') }
      - "recent_incident_date": ${ format_date(recent_incident_date, format='M/d/yyyy') }
      - "recent_incident_time": ${ recent_incident_time }
      - "recent_incident_town": ${ recent_incident_town }
      - "recent_incident_state": ${ recent_incident_state }
      - "recent_incident_description": ${ RFAaffidavit.safe_value("recent_incident_description") }
      - "recent_incident_most_serious_yes": ${ recent_incident_most_serious }
      - "recent_incident_most_serious_no": ${ not recent_incident_most_serious }
      - "serious_incident_date": ${ format_date(serious_incident_date, format='M/d/yyyy') }
      - "serious_incident_time": ${ serious_incident_time }
      - "serious_incident_town": ${ serious_incident_town }
      - "serious_incident_state": ${ serious_incident_state }
      - "serious_incident_description": ${ RFAaffidavit.safe_value("serious_incident_description") }
      - "other_incident_description": ${ RFAaffidavit.safe_value("other_incident_description") }
      - "weapon1": ${ weapons[0].description }
      - "weapon1_location": ${ weapons[0].location }
      - "weapon2": ${ weapons[1].description }
      - "weapon2_location": ${ weapons[1].location }
      - "weapon3_location": ${ weapons[2].location }
      - "weapon3": ${ weapons[2].description }
      - "weapon4_location": ${ weapons[3].location }
      - "weapon4": ${ weapons[3].description }
      - "weapon5_location": ${ weapons[4].location }
      - "weapon5": ${ weapons[4].description }
      - "weapon6_location": ${ weapons[5].location }
      - "weapon6": ${ weapons[5].description }
      - "weapon7": ${ weapons[6].description }
      - "weapon7_location": ${ weapons[6].location }
      - "weapon8": ${ weapons[7].description }
      - "weapon8_location": ${ weapons[7].location }
      - "extra_sheets_attached": ${ extra_sheets_attached }
      - "used_weapon_yes": ${ used_weapon }
      - "used_weapon_no": ${ not used_weapon }
      - "used_weapon_how": ${ used_weapon_how }
      - "danger_more_abuse_yes": ${ danger_more_abuse }
      - "danger_more_abuse_no": ${ not danger_more_abuse }
      - "danger_more_abuse_why": ${ RFAaffidavit.safe_value("danger_more_abuse_why") }
      - "other_parties1_military_yes": ${ other_parties1_military }
      - "other_parties1_military_no": ${ not other_parties1_military }
      - "printed_signature": ${ printed_signature }
---
attachment:
  name: 4 RFA-confidential-contact-info
  filename: 4_RFA-confidential-contact-info
  variable name: RFAconfidentialcontactinfo[i]
  skip undefined: True
  pdf template file: 4_RFA-confidential-contact-info.pdf
  fields:
      - "docket_number__1": ${ docket_number }
      - "docket_number__2": ${ docket_number }
      - "docket_number": ${ docket_number }
      - "trial_court_county__1": ${ trial_court.address.county }
      - "trial_court_county__2": ${ trial_court.address.county }
      - "trial_court_county": ${ trial_court_name }
      - "users1_name__1": ${ users[0] }
      - "users1_name__2": ${ users[0] }
      - "users1_name": ${ users[0] }
      - "users1_address_address__1": ${ users[0].address.address }
      - "users1_address_address": ${ users[0].address.address }
      - "users1_address_mailing": ${ users1_address_mailing }
      - "users1_address_city__1": ${ users[0].address.city }
      - "users1_address_city": ${ users[0].address.city }
      - "users1_address_state__1": ${ users[0].address.state }
      - "users1_address_state": ${ users[0].address.state }
      - "users1_address_zip__1": ${ users[0].address.zip }
      - "users1_phone_number": ${ users[0].phone_number }
      - "users1_work_phone_number": ${ users1_work_phone_number }
      - "users1_email": ${ users[0].email }
      - "share_contact_yes": ${ share_contact }
      - "share_contact_no": ${ not share_contact }
      - "signature_date__1": ${ format_date(signature_date, format='M/d/yyyy') }
      - "signature_date": ${ format_date(signature_date, format='M/d/yyyy') }
      - "users1_signature__1": ${ users[0].signature_if_final(i) }
      - "users1_signature": ${ users[0].signature_if_final(i) }
---
attachment:
  name: 1 RFA-complaint
  filename: 1_RFA-complaint
  variable name: RFAcomplaint[i]
  skip undefined: True
  pdf template file: 1_RFA-complaint.pdf
  fields:
      - "docket_number__1": ${ docket_number }
      - "docket_number__2": ${ docket_number }
      - "docket_number": ${ docket_number }
      - "trial_court_county__1": ${ trial_court.address.county }
      - "trial_court_county__2": ${ trial_court.address.county }
      - "trial_court_county": ${ trial_court_name }
      - "users1_name__1": ${ users[0] }
      - "users1_name__2": ${ users[0] }
      - "users1_name": ${ users[0] }
      - "users1_birthdate__1": ${ users[0].birthdate.format() }
      - "users1_birthdate": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_birthdate__2": ${ users[0].birthdate.format() }
      - "other_parties1_name__1": ${ other_parties[0] }
      - "other_parties1_name__2": ${ other_parties[0] }
      - "other_parties1_name": ${ other_parties[0] }
      - "other_parties1_birthdate__1": ${ other_parties[0].birthdate.format() }
      - "other_parties1_birthdate": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate__2": ${ other_parties[0].birthdate.format() }
      - "other_parties1_address_address__1": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_address": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_address__2": ${ other_parties[0].address.line_one() }
      - "other_parties1_address_city__1": ${ other_parties[0].address.city }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "other_parties1_address_city__2": ${ other_parties[0].address.city }
      - "other_parties1_address_state__1": ${ other_parties[0].address.state }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_state__2": ${ other_parties[0].address.state }
      - "other_parties1_address_zip__1": ${ other_parties[0].address.zip }
      - "other_parties1_address_zip": ${ other_parties[0].address.zip }
      - "recent_incident_date__1": ${ recent_incident_date.format() }
      - "recent_incident_date": ${ format_date(recent_incident_date, format='M/d/yyyy') }
      - "danger_more_abuse": ${ danger_more_abuse }
      - "users1_address_address__1": ${ users[0].address.address }
      - "users1_address_address": ${ users[0].address.address }
      - "users1_address_city__1": ${ users[0].address.city }
      - "users1_address_city": ${ users[0].address.city }
      - "users1_address_state__1": ${ users[0].address.state }
      - "users1_address_state": ${ users[0].address.state }
      - "family_member_description": ${ family_member_description }
      - "family_member": ${ family_member }
      - "spouse": ${ is_spouse }
      - "other_relationship_description": ${ other_relationship_description }
      - "ex_spouse": ${ ex_spouse }
      - "other_relationship": ${ other_relationship }
      - "live_together": ${ live_together }
      - "sexual_relationship": ${ sexual_relationship }
      - "dating": ${ dating }
      - "existing_order_divorce_yes": ${ existing_order["existing_order_divorce"] }
      - "existing_order_divorce_no": ${ not existing_order["existing_order_divorce"] }
      - "dissolution_yes": ${ existing_order["dissolution"] }
      - "dissolution_no": ${ not existing_order["dissolution"] }
      - "existing_order_RFA_yes": ${ existing_order["existing_order_RFA"] }
      - "existing_order_RFA_no": ${ not existing_order["existing_order_RFA"] }
      - "criminal_proceeding_yes": ${ existing_order["criminal_proceeding"] }
      - "criminal_proceeding_no": ${ not existing_order["criminal_proceeding"] }
      - "parentage_order_yes": ${ existing_order["parentage_order"] }
      - "parentage_order_no": ${ not existing_order["parentage_order"] }
      - "guardianship_order_yes": ${ existing_order["guardianship_order"] }
      - "guardianship_order_no": ${ not existing_order["guardianship_order"] }
      - "juvenile_order_yes": ${ existing_order["juvenile_order"] }
      - "juvenile_order_no": ${ not existing_order["juvenile_order"] }
      - "child_support_order_yes": ${ existing_order["child_support_order"] }
      - "child_support_order_no": ${ not existing_order["child_support_order"] }
      - "existing_order_state": ${ existing_order_state }
      - "existing_order_county": ${ existing_order_county }
      - "existing_order_users_attorney": ${ existing_order_users_attorney }
      - "existing_order_OP_attorney": ${ existing_order_OP_attorney }
      - "recent_incident_yes": ${ True }
      - "recent_incident_users1": ${ recent_incident_users1 }
      - "recent_incident_children": ${ recent_incident_children }
      - "recent_incident_children_names": ${ recent_incident_children_names }
      - "recent_incident_harm": ${ recent_incident_harm }
      - "recent_incident_fear": ${ recent_incident_fear }
      - "recent_incident_abused": ${ recent_incident_abused }
      - "recent_incident_stalked_users1": ${ recent_incident_stalked_users1 }
      - "recent_incident_stalked_children": ${ recent_incident_stalked_children }
      - "recent_incident_stalked": ${ recent_incident_stalked }
      - "recent_incident_stalked_date2": ${ format_date(recent_incident_stalked_date2, format='M/d/yyyy') }
      - "recent_incident_stalked_date1": ${ format_date(recent_incident_stalked_date1, format='M/d/yyyy') }
      - "recent_incident_assault_children": ${ recent_incident_assault_children }
      - "recent_incident_assault_": ${ recent_incident_assault }
      - "recent_incident_assault_users1": ${ recent_incident_assault_users1 }
      - "danger_more_abuse_children": ${ danger_more_abuse_who["children"] }
      - "danger_more_abuse_users1": ${ danger_more_abuse_who["users1"] }
      - "used_firearm": ${ used_firearm }
      - "incarcerated": ${ incarcerated }
      - "users1_no_shelter": ${ users1_no_shelter }
      - "residence_shared_address": ${ residence_shared_address }
      - "residence_of_users1": ${ residence_of_users1 }
      - "residence_owned": ${ residence_owned }
      - "residence_rented": ${ residence_rented }
      - "residence_of_OP": ${ residence_of_OP }
      - "residence_of_other": ${ residence_of_other }
      - "residence_of_both": ${ residence_of_both }
      - "reach_up_users1": ${ reach_up_users1 }
      - "reach_up_OP": ${ reach_up_OP }
      - "request_not_abuse_children": ${ request_not_abuse_children }
      - "request_not_abuse_users1": ${ request_not_abuse_users1 }
      - "request_not_abuse": ${ request_not_abuse }
      - "request_no_stalking_assault": ${ request_no_stalking_assault }
      - "request_no_stalking": ${ request_no_stalking }
      - "request_no_assault": ${ request_no_assault }
      - "request_no_assault_users1": ${ request_no_assault_users1 }
      - "request_no_assault_children": ${ request_no_assault_children }
      - "request_leave": ${ request_leave }
      - "request_no_firearms": ${ request_no_firearms }
      - "request_surrender_firearms": ${ request_surrender_firearms }
      - "request_living_expenses": ${ request_living_expenses }
      - "request_child_support": ${ request_child_support }
      - "request_no_pet_children": ${ request_no_pet_children }
      - "request_no_pet_harm": ${ request_no_pet_harm }
      - "request_no_pet_users1": ${ request_no_pet_users1 }
      - "request_control_of_pet": ${ request_control_of_pet }
      - "request_stay_away_children": ${ request_stay_away_children }
      - "request_stay_away_feet": ${ request_stay_away_feet }
      - "request_stay_away_users1": ${ request_stay_away_users1 }
      - "request_stay_away": ${ request_stay_away }
      - "request_no_contact_users1": ${ request_no_contact_users1 }
      - "request_no_contact_children": ${ request_no_contact_children }
      - "request_no_contact": ${ request_no_contact }
      - "request_temp_PRR": ${ request_temp_PRR }
      - "children1_name": |
          % if children[0].custody_wanted:
          ${ children[0] }
          % endif
      - "children1_birthdate": |
          % if children[0].custody_wanted:
          ${ format_date(children[0].birthdate, format='M/d/yyyy') }
          % endif
      - "children1_relationship_users1": ${ children[0].relationship_users1 }
      - "children1_relationship_OP": ${ children[0].relationship_OP }
      - "children2_name": |
          % if children[1].custody_wanted:
          ${ children[1] }
          % endif
      - "children2_birthdate": |
          % if children[1].custody_wanted:
          ${ format_date(children[1].birthdate, format='M/d/yyyy') }
          % endif      
      - "children2_relationship_users1": ${ children[1].relationship_users1 }
      - "children2_relationship_OP": ${ children[1].relationship_OP }
      - "children3_name": |
          % if children[2].custody_wanted:
          ${ children[2] }
          % endif      
      - "children3_birthdate": |
          % if children[2].custody_wanted:
          ${ format_date(children[2].birthdate, format='M/d/yyyy') }
          % endif      
      - "children3_relationship_users1": ${ children[2].relationship_users1 }
      - "children3_relationship_OP": ${ children[2].relationship_OP }
      - "request_other_description": ${ request_other_description }
      - "request_other": ${ other_request }
      - "request_all_emergency": ${ request_all_emergency }
      - "signature_date__2": ${ format_date(signature_date, format='M/d/yyyy') }
      - "users1_signature": ${ users[0].signature_if_final(i) }
---
attachment:
  name: 2 RFA-service-info
  filename: 2_RFA-service-info
  variable name: RFAserviceinfo[i]
  skip undefined: True
  pdf template file: 2_RFA-service-info.pdf
  fields:
      - "users1_birthdate__1": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_birthdate": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "users1_birthdate__2": ${ format_date(users[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate__1": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_birthdate__2": ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
      - "other_parties1_address_address__1": ${ other_parties1_street_only }
      - "other_parties1_address_address": ${ other_parties1_street_only }
      - "other_parties1_address_address__2": ${ other_parties1_street_only }
      - "other_parties1_address_city__1": ${ other_parties[0].address.city }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "other_parties1_address_city__2": ${ other_parties[0].address.city }
      - "other_parties1_address_state__1": ${ other_parties[0].address.state }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_state__2": ${ other_parties[0].address.state }
      - "date": ${ format_date(date, format='M/d/yyyy') }
      - "users1_name_last": ${ users[0].name.last }
      - "users1_name_first": ${ users[0].name.first }
      - "users1_name_middle": ${ users[0].name.middle }
      - "users1_notify_phone_number": ${ users1_notify_phone_number }
      - "notify_served_yes": ${ notify_served }
      - "notify_served_no": ${ not notify_served }
      - "spouse_or_ex_spouse": ${ relationship_for_LE["spouse_or_ex_spouse"] }
      - "lived_together": ${ relationship_for_LE["lived_together"] }
      - "had_kids_together": ${ relationship_for_LE["had_kids_together"] }
      - "defendants_child": ${ relationship_for_LE["defendants_child"] }
      - "plaintiffs_child": ${ relationship_for_LE["plaintiffs_child"] }
      - "suffix_sr": ${ suffix_sr }
      - "suffix_jr": ${ suffix_jr }
      - "suffix_first": ${ suffix_first }
      - "suffix_second": ${ suffix_second }
      - "suffix_third": ${ suffix_third }
      - "other_parties1_name_last": ${ other_parties[0].name.last }
      - "other_parties1_name_first": ${ other_parties[0].name.first }
      - "other_parties1_name_middle": ${ other_parties[0].name.middle }
      - "other_parties1_age": ${ other_parties[0].age_in_years() }
      - "other_parties1_aliases": ${ other_parties1_aliases }
      - "sex_female": ${ sex_female }
      - "sex_male": ${ sex_male }
      - "race_white": ${ race["race_white"] }
      - "race_black": ${ race["race_black"] }
      - "race_native": ${ race["race_native"] }
      - "race_asian": ${ race["race_asian"] }
      - "race_other": ${ race["race_other"] }
      - "skin_light": ${ skin_light }
      - "skin_medium": ${ skin_medium }
      - "skin_dark": ${ skin_dark }
      - "skin_other": ${ skin_other }
      - "other_parties1_height_ft": ${ other_parties1_height_ft }
      - "other_parties1_height_in": ${ other_parties1_height_in }
      - "other_parties1_weight_lbs": ${ other_parties1_weight_lbs }
      - "eyes_brown": ${ eyes_brown }
      - "eyes_blue": ${ eyes_blue }
      - "eyes_gray": ${ eyes_gray }
      - "eyes_green": ${ eyes_green }
      - "eyes_hazel": ${ eyes_hazel }
      - "eyes_other": ${ eyes_other }
      - "lenses_glasses": ${ lenses_glasses }
      - "lenses_contacts": ${ lenses_contacts }
      - "hair_brown": ${ hair_brown }
      - "hair_blond": ${ hair_blond }
      - "hair_black": ${ hair_black }
      - "hair_red": ${ hair_red }
      - "hair_gray": ${ hair_gray }
      - "hair_bald": ${ hair_bald_color }
      - "hair_bald__1": ${ hair_bald }
      - "hair_other": ${ hair_other }
      - "hair_short": ${ hair_short }
      - "hair_medium": ${ hair_medium }
      - "hair_long": ${ hair_long }
      - "hair_beard": ${ hair_beard }
      - "hair_mustache": ${ hair_mustache }
      - "tattoos": ${ tattoos }
      - "tattoos_location": ${ tattoos_location }
      - "scars": ${ scars }
      - "scars_location": ${ scars_location }
      - "piercing": ${ piercing }
      - "piercing_location": ${ piercing_location }
      - "other_marks": ${ other_marks }
      - "marks_location": ${ marks_location }
      - "other_parties1_phone_number": ${ other_parties[0].phone_number }
      - "other_parties1_mobile_number": ${ other_parties[0].mobile_number }
      - "other_parties1_work_phone_number": ${ other_parties1_work_phone_number }
      - "other_parties1_other_phone_number": ${ other_parties1_other_phone_number }
      - "house": ${ house }
      - "house__1": ${ house2 }
      - "house__2": ${ house3 }
      - "location_of_home": ${ RFAserviceinfo.safe_value("location_of_home") }
      - "description_of_home": ${ description_of_home }
      - "best_contact_time": ${ RFAserviceinfo.safe_value("best_contact_time") }
      - "employers_street_address": ${ employers_street_address }
      - "employer": ${ employer }
      - "employers_city_state": ${ employers_city_state }
      - "work_mondays": ${ work_mondays }
      - "work_tues": ${ work_tues }
      - "work_weds": ${ work_weds }
      - "work_thurs": ${ work_thurs }
      - "work_fri": ${ work_fri }
      - "work_sat": ${ work_sat }
      - "work_sun": ${ work_sun }
      - "other_location_street_address": ${ other_location_street_address }
      - "other_location_city": ${ other_location_city }
      - "other_location_state": ${ other_location_state }
      - "other_location_phone": ${ other_location_phone }
      - "other_location2_street_address": ${ other_location2_street_address }
      - "other_location2_city": ${ other_location2_city }
      - "other_location2_state": ${ other_location2_state }
      - "other_location2_phone": ${ other_location2_phone }
      - "vehicle_plate": ${ vehicle_plate }
      - "vehicle_year": ${ vehicle_year }
      - "vehicle_make": ${ vehicle_make }
      - "vehicle_model": ${ vehicle_model }
      - "vehicle_color": ${ vehicle_color }
      - "avoid_served_yes": ${ avoid_served }
      - "avoid_served_no": ${ not avoid_served }
      - "guard_dog_yes": ${ guard_dog }
      - "guard_dog_no": ${ not guard_dog }
      - "under_infl_yes": ${ under_infl }
      - "under_infl_no": ${ not under_infl }
      - "danger_for_officer_yes": ${ danger_for_officer }
      - "danger_for_officer_no": ${ not danger_for_officer }
      - "danger_for_officer_why": ${ RFAserviceinfo.safe_value("danger_for_officer_why") }
---
code: |
  RFAaffidavit.overflow_fields["recent_incident_description"].overflow_trigger = 1246
  RFAaffidavit.overflow_fields["recent_incident_description"].label = "Please describe the most recent incident with as much detail as possible."
  RFAaffidavit.overflow_fields["serious_incident_description"].overflow_trigger = 870
  RFAaffidavit.overflow_fields["serious_incident_description"].label = "Please describe the most serious incident with as much detail as possible."
  RFAaffidavit.overflow_fields["other_incident_description"].overflow_trigger = 2262
  RFAaffidavit.overflow_fields["other_incident_description"].label = "Please describe the any other incident(s) with as much detail as possible."
  RFAaffidavit.overflow_fields["used_weapon_how"].overflow_trigger = 602
  RFAaffidavit.overflow_fields["used_weapon_how"].label = "Describe in detail how they used or threatened to use it?"
  RFAaffidavit.overflow_fields["danger_more_abuse_why"].overflow_trigger = 258
  RFAaffidavit.overflow_fields["danger_more_abuse_why"].label = "Explain why you think there is danger of more abuse. Be as specific as possible."
  RFAaffidavit.overflow_fields.gathered = True

---
code:  |
  RFAserviceinfo.overflow_fields["location_of_home"].overflow_trigger = 850
  RFAserviceinfo.overflow_fields["location_of_home"].label = "If you don't have a street address, describe the location of the home."
  RFAserviceinfo.overflow_fields["best_contact_time"].overflow_trigger = 170
  RFAserviceinfo.overflow_fields["best_contact_time"].label = "Best days and times to contact the defendant at home."
  RFAserviceinfo.overflow_fields["danger_for_officer_why"].overflow_trigger = 255
  RFAserviceinfo.overflow_fields["danger_for_officer_why"].label = "Why will the officer be in danger?"
  RFAserviceinfo.overflow_fields.gathered = True
  RFAconfidentialcontactinfo.overflow_fields.gathered = True
  RFAcomplaint.overflow_fields.gathered = True
---

